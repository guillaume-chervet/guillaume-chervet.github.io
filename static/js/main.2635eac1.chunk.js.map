{"version":3,"sources":["handleFiles/FileTreatment.js","handleFiles/score.js","handleFiles/TableResult.js","handleFiles/HandleFile.js","index.js"],"names":["optionsSelect","value","label","extensionsSelect","emptyFile","FileTreatment","state","setState","tryFormatOutput","data","jsonString","JSON","parse","stringify","e","mapItems","map","item","left","Left","Body","right","Right","fileName","FileName","TimeMs","Url","FileDirectory","StatusCode","id","cuid","collapse","formatBody","bodyJson","side","rawBodyInput","rawBodyOutput","eval","formatJson","items","filterLeft","filterRight","newItem","error","console","log","loadFile","input","values","file","size","reader","FileReader","onloadend","result","name","readAsText","className","accept","onChange","filters","filterName","options","pagingCurrent","extensionName","mode","theme","editorProps","$blockScrolling","levenshtein","require","flattenObject","origin","destinationDictionnary","prefix","excludes","propertyName","Array","isArray","index","toString","includes","levenshteinBetweenTwoDictionnary","leftDictionnary","rightDictionnary","score","Object","entries","key","leftValue","rightValue","parseToObject","body","leftBody","leftDic","filterItems","filter","reverseString","str","from","reverse","join","getExtensionName","reversed","start","indexOf","end","extension","substr","dmp","diff_match_patch","diff","text1","text2","Diff_Timeout","parseFloat","d","diff_main","diff_cleanupSemantic","diff_prettyHtml","computeNumberPages","numberItems","numberItemsControlled","length","Math","ceil","statusCodes","statuses","keys","Scores","scores","ScoreItems","number_ok","number_ko","round","StatsTable","totalTimeMs","total","rightTimeMs","leftTimeMs","forEach","computeTotalTimeMs","orderByStatusCode","levenshteinScores","flattenIndexKey","regex","rightDic","score_item","newKey","replace","totalLevenshtein","TableResult","filteredFiles","filteredExtensions","toUpperCase","pageItems","currentPage","pageIndex","controlledNumberItems","beginIndex","lastIndex","slice","filterPaging","pagingSelect","onClick","newItems","push","collapseItem","type","parseItem","element","document","createElement","appendChild","select","execCommand","removeChild","dangerouslySetInnerHTML","__html","numberPages","page","HandleFile","useState","title","subtitle","img","logo","alt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2635eac1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {File} from \"@axa-fr/react-toolkit-form-input-file\";\r\nimport {SelectBase} from \"@axa-fr/react-toolkit-form-input-select\";\r\nimport cuid from \"cuid\";\r\nimport {stringify} from \"json-stable-stringify\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\n\r\nconst optionsSelect= [\r\n    {value: 'KO', label: \"KO\"},\r\n    {value : 'OK', label: \"OK\"},\r\n    {value : '200', label: \"200\"},\r\n    {value : '400', label: \"400\"},\r\n    {value : '504', label: \"504\"},\r\n    {value : 'Tout', label: 'Tout'}\r\n];\r\n\r\nconst extensionsSelect = [\r\n    {value: 'Tout', label: 'Tout'},\r\n    {value: 'PNG', label: 'PNG'},\r\n    {value: 'JPG/JPEG', label: 'JPG/JPEG'},\r\n    {value: 'PDF', label: 'PDF'},\r\n    {value: 'TIFF', label: 'TIFF'}\r\n];\r\n\r\nlet emptyFile = false;\r\n\r\nconst FileTreatment = ({state, setState}) => {\r\n\r\n    const tryFormatOutput = (data) => {\r\n        try {\r\n            const jsonString = JSON.parse(data);\r\n            return stringify(jsonString);\r\n        } catch (e){\r\n            return data;\r\n        }\r\n    };\r\n\r\nconst mapItems = (data) => (data.map(item => {\r\n    const left = tryFormatOutput(item.Left.Body);\r\n    const right = tryFormatOutput(item.Right.Body);\r\n    return {\r\n        fileName: item.FileName,\r\n        left: { Body: left, TimeMs: item.Left.TimeMs, Url: item.Left.Url, FileDirectory: item.Left.FileDirectory, StatusCode: item.Left.StatusCode},\r\n        right: { Body: right, TimeMs: item.Right.TimeMs, Url: item.Right.Url, FileDirectory: item.Right.FileDirectory, StatusCode: item.Right.StatusCode },\r\n        id : cuid(),\r\n        parse: false,\r\n        collapse: true,\r\n    }\r\n}));\r\n\r\nconst formatBody = (bodyJson, side) => {\r\n    let rawBodyInput = bodyJson;\r\n    let rawBodyOutput = rawBodyInput\r\n    eval(side);\r\n    return rawBodyOutput;\r\n}\r\n\r\nconst formatJson = (items) => {\r\n    if (!state.filterLeft && !state.filterRight) {\r\n        return items;\r\n    } else {\r\n        try {\r\n            const newItems = items.map(item => {\r\n                const newItem = item;\r\n                if (state.filterLeft) {\r\n                    newItem.left.Body = formatBody(item.left.Body, state.filterLeft);\r\n                }\r\n                if (state.filterRight) {\r\n                    newItem.right.Body = formatBody(item.right.Body, state.filterRight);\r\n                }\r\n                return newItem;\r\n            });\r\n            return newItems;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return items\r\n        }\r\n    }\r\n};\r\n\r\n    const loadFile = e => {\r\n        const input = e.values[0].file;\r\n        if(input.size > 0){\r\n            emptyFile = false;\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const result = JSON.parse(reader.result);\r\n                setState({...state, fileName: e.values[0].file.name, items: formatJson(mapItems(result))});\r\n            }\r\n            reader.readAsText(input);\r\n        }\r\n        else{\r\n            setState({...state, fileName: e.values[0].file.name, items: []});\r\n            emptyFile = true;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"file-input\">\r\n                <File\r\n                    id=\"file_loader\"\r\n                    name=\"placeJsonFile\"\r\n                    accept=\"application/*, text/plain\"\r\n                    onChange={loadFile}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <div className=\"select__status-filter-container\">\r\n                    <p className=\"select__title\">État de fichier :</p>\r\n                    <SelectBase\r\n                    id=\"select_type\"\r\n                    name=\"SelectType\"\r\n                    value={state.filters.filterName}\r\n                    options={optionsSelect}\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                            ...state.filters,\r\n                                filterName:e.value,\r\n                                pagingCurrent: 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n                <p className=\"select__title\">Extensions de fichiers:</p>\r\n                <SelectBase\r\n                    id=\"extension_type\"\r\n                    name=\"ExtensionType\"\r\n                    value={state.filters.extensionName}\r\n                    options={extensionsSelect}\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                                ...state.filters,\r\n                                extensionName:e.value,\r\n                                pagingCurrent: 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n                </div>\r\n                <div className=\"select__function-filter\">\r\n                    <label>filtre gauche</label>\r\n                    <AceEditor\r\n                        mode=\"javascript\"\r\n                        theme=\"github\"\r\n                        onChange={e => setState({...state, filterLeft: e})}\r\n                        value={state.filterLeft}\r\n                        name=\"AceEditorLeft\"\r\n                        editorProps={{ $blockScrolling: true }}\r\n                    />\r\n                </div>\r\n                <div className=\"select__function-filter\">\r\n                    <label>filtre droite</label>\r\n                    <AceEditor\r\n                        mode=\"javascript\"\r\n                        theme=\"github\"\r\n                        onChange={e => setState({...state, filterRight: e})}\r\n                        value={state.filterRight}\r\n                        name=\"AceEditorRight\"\r\n                        editorProps={{ $blockScrolling: true }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            \r\n            {emptyFile && \r\n                <h2 className=\"error-message\">\r\n                    Le fichier est vide !\r\n                </h2>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileTreatment;","const levenshtein = require('js-levenshtein');\r\n\r\nexport const flattenObject = (origin, destinationDictionnary = {}, prefix = \"\", excludes=[]) => {\r\n    if (typeof origin === 'string') {\r\n        return null;\r\n    }\r\n    if (Array.isArray(origin)) {\r\n        origin.map((e, index) => flattenObject(e, destinationDictionnary, index.toString()+ \"_\", excludes));\r\n    }\r\n    for (let propertyName in origin) {\r\n        if(excludes.includes(propertyName)){\r\n            continue;\r\n        }\r\n        const value = origin[propertyName];\r\n        if (typeof value === 'string') {\r\n            destinationDictionnary[prefix+propertyName] = value;\r\n        } else if (typeof value === 'object') {\r\n            flattenObject(value, destinationDictionnary, prefix+propertyName+\"_\", excludes);\r\n        }\r\n    }\r\n    return destinationDictionnary;\r\n};\r\n\r\n\r\nexport const levenshteinBetweenTwoDictionnary = (leftDictionnary, rightDictionnary) => {\r\n    const score =  {}\r\n    for (const [key, leftValue] of Object.entries(leftDictionnary)) {\r\n\r\n        \r\n        let rightValue = null;\r\n        if (key in rightDictionnary){\r\n            rightValue = rightDictionnary[key]\r\n        }        \r\n        score[key] = levenshtein(leftValue ?? \"\", rightValue ?? \"\");\r\n    }\r\n    return score;\r\n}\r\n\r\nfunction parseToObject(body, excludes=[]) {\r\n    try {\r\n        const leftBody = JSON.parse(body)\r\n        const leftDic = flattenObject(leftBody, {}, \"\", excludes);\r\n        return leftDic;\r\n    } catch (e) {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const totalLevenshtein = (items, excludes = [], flattenIndexKey=true) => {\r\n    const score =  {}\r\n    const regex = /[0-9]+_/gi;\r\n    items.forEach(item => {\r\n        const leftDic = parseToObject(item.left.Body, excludes);\r\n        const rightDic = parseToObject(item.right.Body, excludes);\r\n        const score_item = levenshteinBetweenTwoDictionnary(leftDic, rightDic)\r\n        for (const [key, value] of Object.entries(score_item)) {\r\n            let newKey = key;\r\n            if(flattenIndexKey) {\r\n                newKey = key.replace(regex, '')\r\n            }\r\n            if (newKey in score) {\r\n                score[newKey].score += score_item[key];\r\n                score[newKey].number_ok += value ===0 ? 1:0;\r\n                score[newKey].number_ko += value !== 0 ? 1: 0;\r\n            } else {\r\n                score[newKey] = {\r\n                  score: value, \r\n                  number_ok: value ===0 ? 1:0,\r\n                  number_ko: value !== 0 ? 1: 0,\r\n                } \r\n            }\r\n        }\r\n    })\r\n    return score;\r\n}","import React from \"react\";\r\nimport {Paging} from \"@axa-fr/react-toolkit-table\";\r\nimport diff_match_patch from 'diff-match-patch';\r\nimport JSONPretty from 'react-json-pretty';\r\nimport {totalLevenshtein} from \"./score\";\r\n\r\nconst filterItems = (items, filterName) => {\r\n    return items.filter(item => {\r\n        if (filterName === \"KO\"){\r\n            return item.left.Body !== item.right.Body;\r\n        }\r\n        if (filterName === \"OK\"){\r\n            return item.left.Body === item.right.Body;\r\n        }\r\n        if(filterName === \"200\"){\r\n            if(item.left.StatusCode === 200 || item.right.StatusCode === 200){\r\n                return true;\r\n            }\r\n        }\r\n        if(filterName === \"400\"){\r\n            if(item.left.StatusCode === 400 || item.right.StatusCode === 400){\r\n                return true;\r\n            }\r\n        }\r\n        if(filterName === \"504\"){\r\n            if(item.left.StatusCode === 504 || item.right.StatusCode === 504){\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return items;\r\n        }\r\n    });\r\n}\r\n\r\nconst computeTotalTimeMs = (items) => {\r\n    const total = {\r\n        rightTimeMs: 0,\r\n        leftTimeMs: 0,\r\n    };\r\n    items.forEach(item => {\r\n                total.rightTimeMs = total.rightTimeMs + item.right.TimeMs;\r\n                total.leftTimeMs = total.leftTimeMs + item.left.TimeMs;\r\n        }\r\n    )\r\n    return total;\r\n}\r\n\r\nconst orderByStatusCode = (items) => {\r\n    const statusCodes = {};\r\n    items.forEach(item => {\r\n        \r\n        if(!item.right.StatusCode || !item.left.StatusCode){\r\n            return item;\r\n        }\r\n        \r\n        if(!statusCodes[item.right.StatusCode.toString()]){\r\n            statusCodes[item.right.StatusCode.toString()] = { right: 1, left:0 };\r\n        } else{\r\n            statusCodes[item.right.StatusCode.toString()].right ++;\r\n        }\r\n\r\n        if(!statusCodes[item.left.StatusCode.toString()]){\r\n            statusCodes[item.left.StatusCode.toString()] = { right: 0, left:1 };\r\n        } else{\r\n            statusCodes[item.left.StatusCode.toString()].left ++;\r\n        }\r\n    }\r\n    )\r\n    return statusCodes;\r\n}\r\n\r\nconst reverseString = (str) => {\r\n    const array = Array.from(str);\r\n    return array.reverse().join(\"\");\r\n}\r\n\r\nconst getExtensionName = (fileName) => {\r\n    const reversed = reverseString(fileName);\r\n    const start = reversed.indexOf(\".\") + 1;\r\n    const end = reversed.indexOf(\"_\");\r\n    const extension = reversed.substr(start, end - start);\r\n    return reverseString(extension);\r\n}\r\n\r\nconst filterExtensions = (items, extensionName) => {\r\n    return items.filter(item => {\r\n        if(extensionName === \"Tout\"){\r\n            return items;\r\n        }\r\n        if(extensionName === \"JPG/JPEG\"){\r\n            return (getExtensionName(item.fileName).toUpperCase() === \"JPG\" || getExtensionName(item.fileName).toUpperCase() === \"JPEG\");\r\n        }\r\n        return getExtensionName(item.fileName).toUpperCase() === extensionName;\r\n    });\r\n}\r\n\r\nconst dmp = new diff_match_patch();\r\n\r\nconst diff = (text1, text2) => {\r\n    dmp.Diff_Timeout = parseFloat(10);\r\n    const d = dmp.diff_main(text1, text2);\r\n    dmp.diff_cleanupSemantic(d);\r\n    return dmp.diff_prettyHtml(d);\r\n};\r\n\r\nconst filterPaging = (items, numberItems, currentPage) => {\r\n    let pageIndex = 0;\r\n    if (currentPage > 1) {\r\n        pageIndex = currentPage - 1;\r\n    }\r\n\r\n    let controlledNumberItems = 0;\r\n    if (numberItems > 0) {\r\n        controlledNumberItems = numberItems;\r\n    }\r\n\r\n    const { length } = items;\r\n    const beginIndex = pageIndex * controlledNumberItems;\r\n    const lastIndex = length < beginIndex + controlledNumberItems ? length : beginIndex + controlledNumberItems;\r\n\r\n    return items.slice(beginIndex, lastIndex);\r\n};\r\n\r\nconst computeNumberPages = (items, numberItems) => {\r\n    if (!items) {\r\n        return 1;\r\n    }\r\n    const numberItemsControlled = numberItems < 1 ? 1 : numberItems;\r\n    const { length } = items;\r\n    return length > 0 ? Math.ceil(length / numberItemsControlled) : 1;\r\n};\r\n\r\nconst StatusCode = ({statusCodes}) =>{\r\n    const statuses =  Object.keys(statusCodes).map(function(key, index) {\r\n        const value = statusCodes[key];\r\n        return <div className=\"stats__results\" key={key}>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Status Code : {key} </span></div>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Nombre à gauche : {value.left} </span></div>\r\n            <div className=\"stats__results-div\"> <span>Nombre à droite : {value.right} </span></div>\r\n        </div>\r\n    });\r\n    \r\n    return <>{statuses}</>\r\n}\r\n\r\nconst Scores = ({scores}) =>{\r\n    \r\n    const keys = Object.keys(scores);\r\n    const ScoreItems =  keys.map(function(key, index) {\r\n        const value = scores[key];\r\n        return <div className=\"stats__results\" key={key}>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Clé : {key} </span></div>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <ul>\r\n                    <li>Levenshtein score : {value.score} </li>\r\n                    <li>Number OK : {value.number_ok} </li>\r\n                    <li>Number KO : {value.number_ko} </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"stats__results-div\"> <span>Percentage OK : {Math.round((value.number_ok / (value.number_ok + value.number_ko))*100)} % </span></div>\r\n        </div>\r\n    });\r\n\r\n    return <>{ScoreItems}</>\r\n}\r\n\r\nconst StatsTable = ({state}) => {\r\n    const totalTimeMs = computeTotalTimeMs(state.items);\r\n    const statusCodes = orderByStatusCode(state.items);\r\n    const levenshteinScores = totalLevenshtein(state.items, [\"document_id\", \"document_type\"]);\r\n    return(\r\n        <>\r\n            <div className=\"stats\">\r\n                <div className=\"stats__title\">\r\n                    Statistiques :\r\n                </div>\r\n                <div className=\"stats__results\">\r\n                    <div className=\"stats__results-div stats__results-div--border\">\r\n                        <span>Fichiers OK : {filterItems(state.items, \"OK\").length}</span></div>\r\n                    <div className=\"stats__results-div stats__results-div--border\">\r\n                        <span>Fichiers KO : {filterItems(state.items, \"KO\").length}</span></div>\r\n                    <div className=\"stats__results-div\"><span>Total : {state.items.length}</span></div>\r\n                </div>\r\n                <div className=\"stats__results\">\r\n                    <div className=\"stats__results-div stats__results-div--border\">\r\n                        <span>Temps total gauche : {totalTimeMs.leftTimeMs / 1000} secondes</span></div>\r\n                    <div className=\"stats__results-div stats__results-div--border\">\r\n                        <span>Temps total droite : {totalTimeMs.rightTimeMs / 1000} secondes</span></div>\r\n                    <div className=\"stats__results-div\"><span>Différence : {(totalTimeMs.rightTimeMs - totalTimeMs.leftTimeMs) / 1000} secondes soit +{Math.round((totalTimeMs.leftTimeMs / totalTimeMs.rightTimeMs) *100)}% de gain</span></div>\r\n                </div>\r\n                <div className=\"stats__results\">\r\n                    <div className=\"stats__results-div stats__results-div--border\">\r\n                        <span>Temps moyen gauche : {(totalTimeMs.leftTimeMs / state.items.length) / 1000} secondes</span></div>\r\n                    <div className=\"stats__results-div stats__results-div--border\">\r\n                        <span>Temps moyen droite : {(totalTimeMs.rightTimeMs / state.items.length) / 1000} secondes</span></div>\r\n                    <div className=\"stats__results-div\"><span>Différence : {((totalTimeMs.rightTimeMs - totalTimeMs.leftTimeMs) / state.items.length) / 1000} secondes soit +{Math.round((totalTimeMs.leftTimeMs / totalTimeMs.rightTimeMs) *100)}% </span></div>\r\n                </div>\r\n                <StatusCode statusCodes={statusCodes}  />\r\n                <Scores scores={levenshteinScores}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst TableResult = ({state, setState}) => {\r\n\r\n    const collapseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, collapse: !item.collapse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n\r\n    const parseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, parse: !item.parse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n    \r\n    const filteredFiles = filterItems(state.items, state.filters.filterName);\r\n    const filteredExtensions = filterExtensions(filteredFiles, state.filters.extensionName);\r\n    const pageItems = filterPaging(filteredExtensions, state.filters.pagingSelect, state.filters.pagingCurrent);\r\n    \r\n    return <>\r\n        \r\n        <StatsTable state={state}/>\r\n        \r\n        {pageItems.length === 0 ? (\r\n            <h2 className=\"error-message\">Il n'y a aucun fichier de type {state.filters.filterName} et dont l'extension est {state.filters.extensionName} !</h2>\r\n        ) : (\r\n            <>\r\n                {pageItems.map(item => (\r\n                    <div key={item.id} className=\"table-result\">\r\n                        <div className=\"table-result__header\">\r\n                            <div>\r\n                                <p>Résultat fichier : {item.fileName}</p>\r\n                                <h2>{item.left.Body !== item.right.Body ? <span className=\"table-result__row--red\">KO</span> :\r\n                                <span className=\"table-result__row--green\">OK</span>} Ratio temps à gauche - temps à droite\r\n                                : {(item.right.TimeMs - item.left.TimeMs) / 1000} secondes</h2>\r\n                            </div>\r\n                            <div className=\"table-result__collapse-button\" onClick={() => {collapseItem(item.id)}}>{item.collapse ? \"-\" : \"+\"}</div>\r\n                        </div>\r\n                        {item.collapse && (\r\n                            <>\r\n                                <div className=\"table-result__parse-button-container\">\r\n                                    <button className=\"table-result__parse-button\" type=\"button\" onClick={() => {parseItem(item.id)}}>{item.parse ? \"Déparse\" : \"Parse\"}</button>\r\n                                </div>\r\n                                <div className=\"table-result__column-container\">\r\n                                    <div className=\"table-result__column\">\r\n                                        <div className=\"table-margin\">\r\n                                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {\r\n                                                const element = document.createElement('textarea');\r\n                                                element.value = item.left.FileDirectory\r\n                                                document.body.appendChild(element)\r\n                                                element.select()\r\n                                                document.execCommand(\"copy\")\r\n                                                document.body.removeChild(element)\r\n                                            }}>\r\n                                                Cliquez ici\r\n                                            </button>\r\n                                            <h3>{item.left.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">Time: {item.left.TimeMs / 1000} seconds</div>\r\n                                            <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.left.Body}/>: item.left.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"table-result__column table-result__column--border-left\">\r\n                                        <div className=\"table-margin\">\r\n                                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {\r\n                                                const element = document.createElement('textarea');\r\n                                                element.value = item.right.FileDirectory\r\n                                                document.body.appendChild(element)\r\n                                                element.select()\r\n                                                document.execCommand(\"copy\")\r\n                                                document.body.removeChild(element)\r\n                                            }}>\r\n                                                Cliquez ici\r\n                                            </button>\r\n                                            <h3>{item.right.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">\r\n                                                Time: {item.right.TimeMs / 1000} seconds\r\n                                            </div>\r\n                                        <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.right.Body}/>: item.right.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"table-result__row table-result__row--overflow\"\r\n                                dangerouslySetInnerHTML={{__html: diff(item.left.Body, item.right.Body)}}\r\n                                />\r\n                            </>\r\n                        )}\r\n\r\n                    </div>\r\n                ))}\r\n                \r\n                <Paging\r\n                    currentPage={state.filters.pagingCurrent}\r\n                    numberPages={computeNumberPages(filteredExtensions, state.filters.pagingSelect)}\r\n                    numberItems={state.filters.pagingSelect}\r\n                    id=\"paging\"\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                            ...state.filters,\r\n                                pagingSelect: e.numberItems,\r\n                                pagingCurrent: state.filters.pagingCurrent > computeNumberPages(filteredExtensions, e.numberItems) ? 1 : e.page\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            </>\r\n        )}\r\n    </>;\r\n}\r\n\r\nexport default TableResult;\r\n","import React, { useState} from \"react\";\r\nimport {Header, Name, Title} from \"@axa-fr/react-toolkit-layout-header\";\r\nimport TableResult from \"./TableResult\";\r\nimport FileTreatment from \"./FileTreatment\";\r\nimport logo from '@axa-fr/react-toolkit-core/dist/assets/logo-axa.svg';\r\nimport './HandleFile.scss';\r\n\r\nconst HandleFile = () =>{\r\n\r\n    const [state, setState] = useState({\r\n        fileName: \"Comparer un fichier JSON\",\r\n        items:[],\r\n        filters: {\r\n            filterName: \"KO\",\r\n            extensionName: \"Tout\",\r\n            pagingSelect: 50,\r\n            pagingCurrent: 1\r\n        },\r\n        filterRight: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`,\r\n        filterLeft: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Name\r\n                    title=\"ML-CLI\"\r\n                    subtitle=\"Made by AXA\"\r\n                    img={logo}\r\n                    alt=\"Logo AXA\"\r\n                />\r\n            </Header>\r\n            <Title title={state.fileName === \"Comparer un fichier JSON\" ? state.fileName: \"Fichier en cours de visualisation : \" + state.fileName}/>\r\n            <FileTreatment state={state} setState={setState} />\r\n            {state.items.length === 0 ? \"\" : <TableResult state={state} setState={setState} /> }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HandleFile;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/grid.css';\r\nimport './scss/reboot.css';\r\nimport '@axa-fr/react-toolkit-all/dist/style/af-components.css';\r\nimport '@axa-fr/react-toolkit-table/dist/af-table.css';\r\nimport '@axa-fr/react-toolkit-form-input-select/dist/select.scss';\r\nimport HandleFile from \"./handleFiles\";\r\n\r\nexport const App = () => (\r\n    <HandleFile />\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}