{"version":3,"sources":["handleFiles/TableResult.js","handleFiles/FileTreatment.js","handleFiles/HandleFile.js","index.js"],"names":["filterItems","items","filterName","filter","item","left","Body","right","reverseString","str","Array","from","reverse","join","getExtensionName","fileName","reversed","start","indexOf","end","extension","substr","dmp","diff_match_patch","diff","text1","text2","Diff_Timeout","parseFloat","d","diff_main","diff_cleanupSemantic","diff_prettyHtml","computeNumberPages","numberItems","numberItemsControlled","length","Math","ceil","TableResult","extensionName","state","setState","filteredFiles","filters","filteredExtensions","toUpperCase","pageItems","currentPage","pageIndex","controlledNumberItems","beginIndex","lastIndex","slice","filterPaging","pagingSelect","pagingCurrent","className","map","key","id","TimeMs","onClick","newItems","newItem","collapse","push","collapseItem","type","parse","parseItem","element","document","createElement","value","FileDirectory","body","appendChild","select","execCommand","removeChild","Url","data","dangerouslySetInnerHTML","__html","numberPages","onChange","e","page","stringify","require","optionsSelect","label","extensionsSelect","FileTreatment","tryFormatOutput","jsonString","JSON","name","accept","input","values","file","reader","FileReader","onloadend","result","Left","Right","FileName","cuid","readAsText","options","HandleFile","useState","parseRight","parseLeft","useEffect","title","subtitle","img","logo","alt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0edc3f69.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Paging} from \"@axa-fr/react-toolkit-table\";\r\nimport diff_match_patch from 'diff-match-patch';\r\nimport JSONPretty from 'react-json-pretty';\r\n\r\n\r\nconst filterItems = (items, filterName) => {\r\n    return items.filter(item => {\r\n        if (filterName === \"KO\"){\r\n            return item.left.Body !== item.right.Body;\r\n        }\r\n        if (filterName === \"OK\"){\r\n            return item.left.Body === item.right.Body;\r\n        }\r\n        else {\r\n            return items;\r\n        }\r\n    });\r\n}\r\n\r\nconst reverseString = (str) => {\r\n    const array = Array.from(str);\r\n    return array.reverse().join(\"\");\r\n}\r\n\r\nconst getExtensionName = (fileName) => {\r\n    const reversed = reverseString(fileName);\r\n    const start = reversed.indexOf(\".\") + 1;\r\n    const end = reversed.indexOf(\"_\");\r\n    const extension = reversed.substr(start, end - start);\r\n    return reverseString(extension);\r\n}\r\n\r\nconst filterExtensions = (items, extensionName) => {\r\n    return items.filter(item => {\r\n        if(extensionName === \"Tout\"){\r\n            return items;\r\n        }\r\n        if(extensionName === \"JPG/JPEG\"){\r\n            return (getExtensionName(item.fileName).toUpperCase() === \"JPG\" || getExtensionName(item.fileName).toUpperCase() === \"JPEG\");\r\n        }\r\n        return getExtensionName(item.fileName).toUpperCase() === extensionName;\r\n    });\r\n}\r\n\r\nconst dmp = new diff_match_patch();\r\n\r\nconst diff = (text1, text2) => {\r\n    dmp.Diff_Timeout = parseFloat(10);\r\n    const d = dmp.diff_main(text1, text2);\r\n    dmp.diff_cleanupSemantic(d);\r\n    return dmp.diff_prettyHtml(d);\r\n};\r\n\r\nconst filterPaging = (items, numberItems, currentPage) => {\r\n    let pageIndex = 0;\r\n    if (currentPage > 1) {\r\n        pageIndex = currentPage - 1;\r\n    }\r\n\r\n    let controlledNumberItems = 0;\r\n    if (numberItems > 0) {\r\n        controlledNumberItems = numberItems;\r\n    }\r\n\r\n    const { length } = items;\r\n    const beginIndex = pageIndex * controlledNumberItems;\r\n    const lastIndex = length < beginIndex + controlledNumberItems ? length : beginIndex + controlledNumberItems;\r\n\r\n    return items.slice(beginIndex, lastIndex);\r\n};\r\n\r\nconst computeNumberPages = (items, numberItems) => {\r\n    if (!items) {\r\n        return 1;\r\n    }\r\n    const numberItemsControlled = numberItems < 1 ? 1 : numberItems;\r\n    const { length } = items;\r\n    return length > 0 ? Math.ceil(length / numberItemsControlled) : 1;\r\n};\r\n\r\nconst TableResult = ({state, setState}) => {\r\n\r\n    const collapseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, collapse: !item.collapse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n\r\n    const parseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, parse: !item.parse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n    \r\n    const filteredFiles = filterItems(state.items, state.filters.filterName);\r\n    const filteredExtensions = filterExtensions(filteredFiles, state.filters.extensionName);\r\n    const pageItems = filterPaging(filteredExtensions, state.filters.pagingSelect, state.filters.pagingCurrent);\r\n    \r\n    return <>\r\n        {filteredFiles.length === 0 ? (\r\n            <h2 className=\"table-title\">Il n'y a aucun fichier de type {state.filters.filterName} !</h2>\r\n        ) : (\r\n            <>\r\n                <div className=\"stats\">\r\n                    <div className=\"stats__title\">\r\n                        Statistiques :\r\n                    </div>\r\n                    <div className=\"stats__results\">\r\n                        <div className=\"stats__results-div stats__results-div--border\">\r\n                            <span>Fichiers OK : {filterItems(state.items, \"OK\").length}</span></div>\r\n                        <div className=\"stats__results-div stats__results-div--border\">\r\n                            <span>Fichiers KO : {filterItems(state.items, \"KO\").length}</span></div>\r\n                        <div className=\"stats__results-div\"><span>Total : {state.items.length}</span></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {pageItems.map(item => (\r\n                    <div key={item.id} className=\"table-result\">\r\n                        <div className=\"table-result__header\">\r\n                            <div>\r\n                                <p>Résultat fichier : {item.fileName}</p>\r\n                                <h2>{item.left.Body !== item.right.Body ? <span className=\"table-result__row--red\">KO</span> :\r\n                                <span className=\"table-result__row--green\">OK</span>} Ratio temps à gauche - temps à droite\r\n                                : {(item.right.TimeMs - item.left.TimeMs) / 1000} secondes</h2>\r\n                            </div>\r\n                            <div className=\"table-result__collapse-button\" onClick={() => {collapseItem(item.id)}}>{item.collapse ? \"-\" : \"+\"}</div>\r\n                        </div>\r\n                        {item.collapse && (\r\n                            <>\r\n                                <div className=\"table-result__parse-button-container\">\r\n                                    <button className=\"table-result__parse-button\" type=\"button\" onClick={() => {parseItem(item.id)}}>{item.parse ? \"Déparse\" : \"Parse\"}</button>\r\n                                </div>\r\n                                <div className=\"table-result__column-container\">\r\n                                    <div className=\"table-result__column\">\r\n                                        <div className=\"table-margin\">\r\n                                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {\r\n                                                const element = document.createElement('textarea');\r\n                                                element.value = item.left.FileDirectory\r\n                                                document.body.appendChild(element)\r\n                                                element.select()\r\n                                                document.execCommand(\"copy\")\r\n                                                document.body.removeChild(element)\r\n                                            }}>\r\n                                                Cliquez ici\r\n                                            </button>\r\n                                            <h3>{item.left.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">Time: {item.left.TimeMs / 1000} seconds</div>\r\n                                            <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.left.Body}/>: item.left.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"table-result__column table-result__column--border-left\">\r\n                                        <div className=\"table-margin\">\r\n                                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {\r\n                                                const element = document.createElement('textarea');\r\n                                                element.value = item.right.FileDirectory\r\n                                                document.body.appendChild(element)\r\n                                                element.select()\r\n                                                document.execCommand(\"copy\")\r\n                                                document.body.removeChild(element)\r\n                                            }}>\r\n                                                Cliquez ici\r\n                                            </button>\r\n                                            <h3>{item.right.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">\r\n                                                Time: {item.right.TimeMs / 1000} seconds\r\n                                            </div>\r\n                                        <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.right.Body}/>: item.right.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"table-result__row table-result__row--overflow\"\r\n                                dangerouslySetInnerHTML={{__html: diff(item.left.Body, item.right.Body)}}\r\n                                />\r\n                            </>\r\n                        )}\r\n\r\n                    </div>\r\n                ))}\r\n                \r\n                <Paging\r\n                    currentPage={state.filters.pagingCurrent}\r\n                    numberPages={computeNumberPages(filteredExtensions, state.filters.pagingSelect)}\r\n                    numberItems={state.filters.pagingSelect}\r\n                    id=\"paging\"\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                            ...state.filters,\r\n                                pagingSelect: e.numberItems,\r\n                                pagingCurrent: e.page\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            </>\r\n        )}\r\n    </>;\r\n}\r\n\r\nexport default TableResult;\r\n","import React from \"react\";\r\nimport {File} from \"@axa-fr/react-toolkit-form-input-file\";\r\nimport {SelectBase} from \"@axa-fr/react-toolkit-form-input-select\";\r\nimport cuid from \"cuid\";\r\nconst stringify = require('json-stable-stringify');\r\n\r\nconst optionsSelect= [\r\n    {value: 'KO', label: \"KO\"},\r\n    {value : 'OK', label: \"OK\"},\r\n    {value : 'Tout', label: 'Tout'}\r\n];\r\n\r\nconst extensionsSelect = [\r\n    {value: 'Tout', label: 'Tout'},\r\n    {value: 'PNG', label: 'PNG'},\r\n    {value: 'JPG/JPEG', label: 'JPG/JPEG'},\r\n    {value: 'PDF', label: 'PDF'},\r\n    {value: 'TIFF', label: 'TIFF'}\r\n];\r\n\r\nconst FileTreatment = ({state, setState}) => {\r\n\r\n    const tryFormatOutput = (data) => {\r\n        try {\r\n            const jsonString = JSON.parse(data);\r\n            return stringify(jsonString);\r\n        } catch (e){\r\n            return data;\r\n        }\r\n    };\r\n\r\nconst mapItems = (data) => (data.map(item => {\r\n    const left = tryFormatOutput(item.Left.Body);\r\n    const right = tryFormatOutput(item.Right.Body);\r\n    return {\r\n        fileName: item.FileName,\r\n        left: { Body: left, TimeMs: item.Left.TimeMs, Url: item.Left.Url, FileDirectory: item.Left.FileDirectory },\r\n        right: { Body: right, TimeMs: item.Right.TimeMs, Url: item.Right.Url, FileDirectory: item.Right.FileDirectory },\r\n        id : cuid(),\r\n        parse: false,\r\n        collapse: true,\r\n    }\r\n}));\r\n\r\n    const loadFile = e => {\r\n        const input = e.values[0].file;\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {  \r\n            const result = JSON.parse(reader.result)\r\n            setState({...state, items: mapItems(result), fileName: input.name});\r\n        }\r\n        reader.readAsText(input);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"file-input\">\r\n                <File\r\n                    id=\"file_loader\"\r\n                    name=\"placeJsonFile\"\r\n                    accept=\"application/*, text/plain\"\r\n                    onChange={loadFile}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"select__title\">État de fichier:</p>\r\n                <SelectBase\r\n                    id=\"select_type\"\r\n                    name=\"SelectType\"\r\n                    value={state.filters.filterName}\r\n                    options={optionsSelect}\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                            ...state.filters,\r\n                                filterName:e.value\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"select__title\">Extensions de fichiers:</p>\r\n                <SelectBase\r\n                    id=\"extension_type\"\r\n                    name=\"ExtensionType\"\r\n                    value={state.filters.extensionName}\r\n                    options={extensionsSelect}\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                                ...state.filters,\r\n                                extensionName:e.value\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileTreatment;","import React, {useEffect, useState} from \"react\";\r\nimport {Header, Name, Title} from \"@axa-fr/react-toolkit-layout-header\";\r\nimport TableResult from \"./TableResult\";\r\nimport FileTreatment from \"./FileTreatment\";\r\nimport logo from '@axa-fr/react-toolkit-core/dist/assets/logo-axa.svg';\r\nimport './HandleFile.scss';\r\n\r\nconst HandleFile = () =>{\r\n\r\n    const [state, setState] = useState({\r\n        fileName: \"Comparer un fichier JSON\",\r\n        items:[],\r\n        filters: {\r\n            filterName: \"KO\",\r\n            extensionName: \"Tout\",\r\n            pagingSelect: 50,\r\n            pagingCurrent: 1\r\n        },\r\n        parseRight: [],\r\n        parseLeft: []\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Name\r\n                    title=\"ML-CLI\"\r\n                    subtitle=\"Made by AXA\"\r\n                    img={logo}\r\n                    alt=\"Logo AXA\"\r\n                />\r\n            </Header>\r\n            <Title title={state.fileName === \"Comparer un fichier JSON\" ? state.fileName: \"Fichier en cours de visualisation : \" + state.fileName}/>\r\n            <FileTreatment state={state} setState={setState} />\r\n            {state.items.length === 0 ? \"\" : <TableResult state={state} setState={setState} /> }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HandleFile;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@axa-fr/react-toolkit-all/dist/style/af-components.css';\r\nimport '@axa-fr/react-toolkit-table/dist/af-table.css';\r\nimport '@axa-fr/react-toolkit-form-input-select/dist/select.scss';\r\nimport HandleFile from \"./handleFiles\";\r\n\r\nexport const App = () => (\r\n    <HandleFile />\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}