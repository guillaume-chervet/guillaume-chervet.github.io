{"version":3,"sources":["handleFiles/TableResult.js","handleFiles/TableItem.js","handleFiles/score.js","handleFiles/StatsTable.js","handleFiles/ApplyTextArea.js","handleFiles/FileTreatment.js","handleFiles/HandleFile.js","index.js"],"names":["filterItems","items","filterName","filter","item","left","Body","right","reverseString","str","Array","from","reverse","join","getExtensionName","fileName","reversed","start","indexOf","end","extension","substr","filterExtensions","extensionName","toUpperCase","filterStatusCode","statusCode","intStatusCode","parseInt","StatusCode","filterSearchBar","searchedString","includes","Url","sortTime","sortTimeType","timeCategory","copiedArray","JSON","parse","stringify","sort","a","b","TimeMs","computeNumberPages","numberItems","numberItemsControlled","length","Math","ceil","formatBody","bodyJson","side","rawBodyInput","rawBodyOutput","eval","formatJson","state","filters","filterLeft","filterRight","map","newItem","bodyLeft","bodyRight","error","console","log","TableResult","setState","filterScripts","filteredFiles","filteredStatusCodes","currentStatusCode","filteredExtensions","sortedTime","timeSide","filteredSearchBar","pageItems","currentPage","pageIndex","controlledNumberItems","beginIndex","lastIndex","pagingCurrent","slice","filterPaging","pagingSelect","TableContentMemo","changeItemValues","currentItem","newItems","result","forEach","tempLeft","tempRight","push","TableContent","className","key","id","regex","regexModifier","imageDirectory","compareLocation","fetchFunction","fetch","numberPages","onChange","e","page","React","memo","dmp","diff_match_patch","diff","text1","text2","Diff_Timeout","parseFloat","d","diff_main","diff_cleanupSemantic","diff_prettyHtml","onCopy","name","element","document","createElement","value","lastIndexOf","FileDirectory","body","appendChild","select","execCommand","removeChild","formatURL","href","url","currentURL","toString","replace","saveData","content","direction","object","method","headers","fetchImages","header","response","ok","json","hardDriveLocations","URLSearchParams","TableItem","useState","isAnnotating","fileUrls","isCollapsed","leftContent","rightContent","isJsonInvalid","useEffect","getImages","setFileUrls","onAnnotationButtonClick","params","ImageDirectoryRegex","directory","URL","window","location","toLowerCase","search","Object","entries","encodeURIComponent","correctUrl","checkFileChangeSuccess","onClick","collapsed","type","index","src","alt","Tab","title","height","screen","language","options","theme","scrollbar","horizontal","jsonParsingError","dangerouslySetInnerHTML","__html","levenshtein","require","flattenObject","origin","destinationDictionnary","prefix","excludes","propertyName","isArray","levenshteinBetweenTwoDictionnary","leftDictionnary","rightDictionnary","score","leftValue","rightValue","parseToObject","leftBody","leftDic","statusCodes","statuses","keys","Scores","scores","ScoreItems","number_ok","number_ko","round","StatsTable","totalTimeMs","total","rightTimeMs","leftTimeMs","computeTotalTimeMs","orderByStatusCode","levenshteinScores","flattenIndexKey","rightDic","score_item","newKey","totalLevenshtein","isStatsTableShowed","ApplyTextArea","labelText","updateRegex","textAreaContent","optionsSelect","label","extensionsSelect","timeSelect","timeSideVariables","emptyFile","FileTreatment","filterRightTemp","filterLeftTemp","filterState","setFilterState","compareStatusCode","status","strStatus","i","setStatusFilterItems","accept","input","values","file","size","reader","FileReader","onloadend","isVersion0","CompareLocation","data","Content","mappedItems","FileName","Left","ImageDirectory","Headers","TicksAt","Right","cuid","collapse","statusCodeItems","readAsText","maxSize","mode","editorProps","$blockScrolling","newValue","HandleFile","appliedScript","subtitle","img","logo","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f8aacc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Paging} from \"@axa-fr/react-toolkit-table\";\r\nimport TableItem from './TableItem';\r\nimport StatsTable from './StatsTable';\r\n\r\nexport const filterItems = (items, filterName) => {\r\n    return items.filter(item => {\r\n        if (filterName === \"KO\"){\r\n            return item.left.Body !== item.right.Body;\r\n        }\r\n        if (filterName === \"OK\"){\r\n            return item.left.Body === item.right.Body;\r\n        }\r\n        else {\r\n            return items;\r\n        }\r\n    });\r\n}\r\n\r\nconst reverseString = (str) => {\r\n    const array = Array.from(str);\r\n    return array.reverse().join(\"\");\r\n}\r\n\r\nconst getExtensionName = (fileName) => {\r\n    const reversed = reverseString(fileName);\r\n    const start = reversed.indexOf(\".\") + 1;\r\n    const end = reversed.indexOf(\"_\");\r\n    const extension = reversed.substr(start, end - start);\r\n    return reverseString(extension);\r\n}\r\n\r\nconst filterExtensions = (items, extensionName) => {\r\n    return items.filter(item => {\r\n        if(extensionName === \"Tout\"){\r\n            return items;\r\n        }\r\n        if(extensionName === \"JPG/JPEG\"){\r\n            return (getExtensionName(item.fileName).toUpperCase() === \"JPG\" || getExtensionName(item.fileName).toUpperCase() === \"JPEG\");\r\n        }\r\n        return getExtensionName(item.fileName).toUpperCase() === extensionName;\r\n    });\r\n}\r\n\r\nconst filterStatusCode = (items, statusCode) => {\r\n    if(statusCode === \"Tout\")\r\n        return items;\r\n    else{\r\n        const intStatusCode = parseInt(statusCode);\r\n        return items.filter(item => {\r\n            return (item.left.StatusCode === intStatusCode || item.right.StatusCode === intStatusCode);\r\n        })\r\n    }\r\n}\r\n\r\nconst filterSearchBar = (items, searchedString) => {\r\n    return items.filter(item => {\r\n        return (\r\n            item.fileName.includes(searchedString) ||\r\n            item.left.Body.includes(searchedString) ||\r\n            item.right.Body.includes(searchedString) ||\r\n            item.left.Url.includes(searchedString) ||\r\n            item.right.Url.includes(searchedString)\r\n        )\r\n    })\r\n}\r\n\r\nexport const sortTime = (items, sortTimeType, timeCategory) => {\r\n    const copiedArray = JSON.parse(JSON.stringify(items));\r\n    if(sortTimeType === \"Croissant\"){\r\n        copiedArray.sort((a,b) => timeCategory === \"Gauche\" ? a.left.TimeMs - b.left.TimeMs : a.right.TimeMs - b.right.TimeMs);\r\n    }\r\n    else if(sortTimeType === \"Décroissant\"){\r\n        copiedArray.sort((a,b) => timeCategory === \"Gauche\"? b.left.TimeMs - a.left.TimeMs : b.right.TimeMs - a.right.TimeMs);\r\n    }\r\n    return copiedArray;\r\n}\r\n\r\nconst computeNumberPages = (items, numberItems) => {\r\n    if (!items) {\r\n        return 1;\r\n    }\r\n    const numberItemsControlled = numberItems < 1 ? 1 : numberItems;\r\n    const { length } = items;\r\n    return length > 0 ? Math.ceil(length / numberItemsControlled) : 1;\r\n};\r\n\r\n// Ne pas esffacé les paramètres non utilisés, ils sont utilisés par le eval\r\nconst formatBody = (bodyJson, side, item) => {\r\n    /*eslint-disable no-eval */\r\n    let rawBodyInput = bodyJson;\r\n    let rawBodyOutput = rawBodyInput\r\n    eval(side);\r\n    return rawBodyOutput;\r\n}\r\n\r\nconst formatJson = (state) => {\r\n    const items = state.items;\r\n    const filters = state.filters;\r\n    if (!filters.filterLeft && !filters.filterRight) {\r\n        return items;\r\n    } else {\r\n        try {\r\n            const copyArray = JSON.parse(JSON.stringify(items));\r\n            return copyArray.map(item => {\r\n                const newItem = item;\r\n\r\n                let bodyLeft = newItem.left.Body\r\n                let bodyRight = newItem.right.Body\r\n                if (filters.filterLeft) {\r\n                    bodyLeft = formatBody(item.left.Body, filters.filterLeft, item);\r\n                }\r\n                if (filters.filterRight) {\r\n                    bodyRight = formatBody(item.right.Body, filters.filterRight, item);\r\n                }\r\n                newItem.left.Body = bodyLeft\r\n                newItem.right.Body = bodyRight\r\n                return newItem;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            return items\r\n        }\r\n    }\r\n};\r\n\r\nconst TableResult = ({state, setState}) => {\r\n    const filterPaging = (items, numberItems, currentPage) => {\r\n        let pageIndex = 0;\r\n        if (currentPage > 1) {\r\n            pageIndex = currentPage - 1;\r\n        }\r\n\r\n        let controlledNumberItems = 0;\r\n        if (numberItems > 0) {\r\n            controlledNumberItems = numberItems;\r\n        }\r\n\r\n        const { length } = items;\r\n        let beginIndex = pageIndex * controlledNumberItems;\r\n        const lastIndex = length < beginIndex + controlledNumberItems ? length : beginIndex + controlledNumberItems;\r\n\r\n        if(lastIndex < beginIndex){\r\n            if(lastIndex - length >= 0){\r\n                beginIndex = lastIndex - length;\r\n            }else{\r\n                beginIndex = 0;\r\n            }\r\n            setState({\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    pagingCurrent: 1\r\n                }\r\n            })\r\n        }\r\n\r\n        return items.slice(beginIndex, lastIndex);\r\n    };\r\n    \r\n    const changeItemValues = (currentItem, left, right) => {\r\n        const newItems = [];\r\n        let result = true;\r\n        state.items.forEach(item => {\r\n            if(item.fileName === currentItem.fileName){\r\n                try{\r\n                    const tempLeft = JSON.stringify(JSON.parse(left));\r\n                    const tempRight = JSON.stringify(JSON.parse(right));\r\n                    item.left.Body = tempLeft;\r\n                    item.right.Body = tempRight;\r\n                }\r\n                catch {\r\n                    result = false;\r\n                }\r\n            }\r\n            newItems.push(item);\r\n        })\r\n        setState({...state, items: newItems});\r\n        return result;\r\n    }\r\n    \r\n    const filterScripts = formatJson(state);\r\n    const filteredFiles = filterItems(filterScripts, state.filters.filterName);\r\n    const filteredStatusCodes = filterStatusCode(filteredFiles, state.filters.currentStatusCode);\r\n    const filteredExtensions = filterExtensions(filteredStatusCodes, state.filters.extensionName);\r\n    const sortedTime = sortTime(filteredExtensions, state.filters.sortTimeType, state.filters.timeSide);\r\n    const filteredSearchBar = filterSearchBar(sortedTime, state.filters.searchedString);\r\n    \r\n    const pageItems = filterPaging(filteredSearchBar, state.filters.pagingSelect, state.filters.pagingCurrent);\r\n    \r\n    return <>\r\n        <StatsTable items={filterScripts} state={state} setState={setState} />\r\n        <TableContentMemo state={state} pageItems={pageItems} changeItemValues={changeItemValues} filteredSearchBar={filteredSearchBar} setState={setState} />\r\n    </>;\r\n}\r\n\r\nconst TableContent = ({state, pageItems, changeItemValues, filteredSearchBar, setState}) => {\r\n\r\n    if (pageItems.length === 0) {\r\n        return <h2 className=\"error-message\">Il n'y a aucun fichier correspondant à cette configuration de filtres !</h2>\r\n    }\r\n    return <>\r\n        {pageItems.map(item => (\r\n            <TableItem\r\n                key={item.id}\r\n                item={item}\r\n                regex={state.filters.regexModifier}\r\n                imageDirectory={state.imageDirectory}\r\n                changeItemValues={changeItemValues}\r\n                compareLocation={state.compareLocation}\r\n                fetchFunction={fetch}\r\n            />\r\n        ))}\r\n\r\n        <Paging\r\n            currentPage={state.filters.pagingCurrent}\r\n            numberPages={computeNumberPages(filteredSearchBar, state.filters.pagingSelect)}\r\n            numberItems={state.filters.pagingSelect}\r\n            id=\"paging\"\r\n            onChange={(e) => {\r\n                setState({...state,\r\n                    filters: {\r\n                        ...state.filters,\r\n                        pagingSelect: e.numberItems,\r\n                        pagingCurrent: state.filters.pagingCurrent > computeNumberPages(filteredSearchBar, e.numberItems) ? 1 : e.page\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n    </>\r\n}\r\n\r\nconst TableContentMemo = React.memo(TableContent)\r\n\r\nexport default TableResult;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Tabs} from \"@axa-fr/react-toolkit-all\";\r\nimport MonacoEditor from \"@uiw/react-monacoeditor\";\r\nimport Button from \"@axa-fr/react-toolkit-button\";\r\nimport diff_match_patch from \"diff-match-patch\";\r\n\r\nconst dmp = new diff_match_patch();\r\n\r\nconst diff = (text1, text2) => {\r\n    dmp.Diff_Timeout = parseFloat(10);\r\n    const d = dmp.diff_main(text1, text2);\r\n    dmp.diff_cleanupSemantic(d);\r\n    return dmp.diff_prettyHtml(d);\r\n};\r\n\r\nconst onCopy = (item, name) => {\r\n    const element = document.createElement('textarea');\r\n    if(name === \"fileName\"){\r\n        element.value = item.fileName.substr(0, item.fileName.lastIndexOf('_'));\r\n    }\r\n    else if(name === \"left\"){\r\n        element.value = item.left.FileDirectory;\r\n    }\r\n    else{\r\n        element.value = item.right.FileDirectory;\r\n    }\r\n    document.body.appendChild(element)\r\n    element.select()\r\n    document.execCommand(\"copy\")\r\n    document.body.removeChild(element)\r\n}\r\n\r\nconst formatURL = (href, url) => {\r\n    const currentURL = href + \"/datasets?\";\r\n    const tempUrl = url.toString();\r\n    return tempUrl.replace(currentURL, href + \"datasets/\")\r\n}\r\n\r\nconst saveData = async(name, compareLocation, content, direction, fetchFunction) => {\r\n    const url = \"/files/save/saveContent\";\r\n    const object = {name: name, compareLocation: compareLocation, content: JSON.stringify(content), direction: direction};\r\n\r\n    await fetchFunction(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(object)\r\n    });\r\n}\r\n\r\nconst fetchImages = async(url, fetchFunction) => {\r\n    let response = await fetchFunction(url, {\r\n        method: 'GET',\r\n        header: {\r\n            'content-type': 'application/json'\r\n        }\r\n    });\r\n\r\n    if(response.ok){\r\n        const hardDriveLocations = await response.json();\r\n        return hardDriveLocations.map(element => {\r\n            return \"/files/\" + new URLSearchParams({\r\n                value: element\r\n            });\r\n        });\r\n    }\r\n    else\r\n        return [];\r\n}\r\n\r\nfunction TableItem({regex, item, imageDirectory, compareLocation, changeItemValues, fetchFunction}) {\r\n\r\n    const [state, setState] = useState({\r\n        isAnnotating:false,\r\n        fileUrls:[],\r\n        isCollapsed: true,\r\n        leftContent: \"\",\r\n        rightContent: \"\",\r\n        isJsonInvalid: false\r\n    });\r\n    \r\n    useEffect(() => {\r\n        if(!state.isAnnotating){\r\n            return;\r\n        }\r\n        async function setFileUrls(){\r\n            const result = await getImages();\r\n            setState({...state, fileUrls: result});\r\n        }\r\n        setFileUrls();\r\n    }, [regex])\r\n    \r\n    const onAnnotationButtonClick = async () => {\r\n        let result = [];\r\n        if(state.isAnnotating === false)\r\n            result = await getImages();\r\n        setState({...state, isAnnotating: !state.isAnnotating, fileUrls: result});\r\n    }\r\n    \r\n    const getImages = async () => {\r\n        \r\n        const params = {\r\n            fileName: item.fileName,\r\n            regex: (!regex ? item.right.ImageDirectoryRegex : regex),\r\n            directory: imageDirectory\r\n        }\r\n        const url = new URL(window.location.href.toString().toLowerCase() + \"/datasets\");\r\n        url.search = Object.entries(params)\r\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n            .join('&');\r\n\r\n        const correctUrl = formatURL(window.location.href, url);\r\n\r\n        return await fetchImages(correctUrl, fetchFunction);\r\n    }\r\n    \r\n    const checkFileChangeSuccess = async (direction) => {\r\n        const item = item;\r\n        const {left, right} = item;\r\n        const leftContent = state.leftContent;\r\n        const rightContent = state.rightContent;\r\n        const result = changeItemValues(\r\n            item,\r\n            !leftContent ? \r\n                left.Body : leftContent,\r\n            !rightContent ? right.Body : rightContent\r\n        );\r\n        setState({...state, isJsonInvalid: !result});\r\n        if (result) {\r\n            let content, fileName;\r\n            if (direction === \"l\") {\r\n                fileName = left.FileDirectory;\r\n                left.Body = leftContent;\r\n                content = left;\r\n            } else {\r\n                fileName = right.FileDirectory;\r\n                right.Body = rightContent;\r\n                content = right;\r\n            }\r\n            await saveData(fileName, compareLocation, content, direction, fetchFunction);\r\n        }\r\n    }\r\n\r\n    return <div className=\"table-result\">\r\n        <div className=\"table-result__header\">\r\n            <div>\r\n                <p>Résultat fichier : {item.fileName}</p>\r\n                <h2>{item.left.Body !== item.right.Body ?\r\n                    <span className=\"table-result__row--red\">KO</span> :\r\n                    <span className=\"table-result__row--green\">OK</span>} Ratio temps à gauche - temps à droite\r\n                    : {(item.right.TimeMs - item.left.TimeMs) / 1000} secondes</h2>\r\n            </div>\r\n            <div className=\"table-result__buttons-group\">\r\n                <div className=\"table-result__copy-button\" onClick={() => {onCopy(item, \"name\")}}>Copier</div>\r\n                <div className=\"table-result__collapse-button\"\r\n                     onClick={() => {setState({...state, collapsed: !state.isCollapsed})}}>{state.isCollapsed ? \"-\" : \"+\"}</div>\r\n            </div>\r\n        </div>\r\n        {state.isCollapsed && (\r\n            <>\r\n                {state.imageDirectory &&  <div className=\"table-result__elements-container\">\r\n                    <button className=\"table-result__parse-button\" type=\"button\"\r\n                            onClick={onAnnotationButtonClick}>\r\n                        <span>{state.isAnnotating ? \"Fermer Annotation\" : \"Annoter\"}</span>\r\n                    </button>\r\n                </div>}\r\n                {state.isAnnotating &&\r\n                <>\r\n                    {state.fileUrls.length === 0 &&\r\n                    <div>\r\n                        <p>Aucun fichier correspondant n'a été trouvé sur votre disque. \r\n                            <br/> Plusieurs raisons sont possibles: \r\n                            <br/> - Il n'existe pas d'image correspondant à ce fichier sur votre disque; \r\n                            <br/> - L'attribut regex spécifié ne correspond à aucun fichier;\r\n                            <br/> - Le répertoire des images de ce fichier n'existe pas.\r\n                        </p>\r\n                    </div>\r\n                    }\r\n                    {state.fileUrls.map((item, index) => (\r\n                        <div key={'urlListItem ' + index} className=\"table-margin table-margin--link-margin width-100\">\r\n                            <div className=\"width-100\"><img src={item} alt=\"file_image\"/></div>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"table-result__elements-container\">\r\n                        <Tabs className=\"tabs__header\">\r\n                            <Tabs.Tab title=\"Gauche\">\r\n                                <div className=\"tabs__container tabs__container--justify width-100\">\r\n                                    <MonacoEditor\r\n                                        id={\"monacoEditorLeft\" + item.fileName}\r\n                                        height={window.screen.height/2}\r\n                                        language=\"json\"\r\n                                        value={JSON.stringify(JSON.parse(item.left.Body), null, 2)}\r\n                                        onChange={(e) => setState({...state, leftContent: e})}\r\n                                        options={{\r\n                                            theme: 'vs-dark',\r\n                                            scrollbar: {\r\n                                                horizontal: 'visible'\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div  className=\"tabs__button-mt\">\r\n                                    {state.isJsonInvalid &&\r\n                                    <div className=\"error-message\"><span>Le JSON modifié est invalide !</span></div>\r\n                                    }\r\n                                    <Button onClick={() => checkFileChangeSuccess(\"l\")}>Sauvegarder</Button>\r\n                                </div>\r\n                            </Tabs.Tab>\r\n                            <Tabs.Tab title=\"Droite\">\r\n                                <div className=\"tabs__container tabs__container--justify width-100\">\r\n                                    <MonacoEditor\r\n                                        id={\"monacoEditorRight\" + item.fileName}\r\n                                        height={window.screen.height/2}\r\n                                        language=\"json\"\r\n                                        value={JSON.stringify(JSON.parse(item.right.Body), null, 2)}\r\n                                        onChange={(e) => setState({...state, rightContent: e})}\r\n                                        options={{\r\n                                            theme: 'vs-dark',\r\n                                            scrollbar: {\r\n                                                horizontal: 'visible'\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div  className=\"tabs__button-mt\">\r\n                                    {state.jsonParsingError &&\r\n                                    <div className=\"error-message\"><span>Le JSON modifié est invalide !</span></div>\r\n                                    }\r\n                                    <Button onClick={() => checkFileChangeSuccess(\"r\")}>Sauvegarder</Button>\r\n                                </div>\r\n                            </Tabs.Tab>\r\n                        </Tabs>\r\n                    </div>\r\n                    }\r\n                </>\r\n                }\r\n                <div className=\"table-result__column-container\">\r\n                    <div className=\"table-result__column\">\r\n                        <div className=\"table-margin\">\r\n                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {onCopy(item, \"left\")}}>\r\n                                Cliquez ici\r\n                            </button>\r\n                            <h3>{item.left.Url}</h3>\r\n                            <div\r\n                                className=\"table-result__column--time-span\">Time: {item.left.TimeMs / 1000} seconds\r\n                            </div>\r\n                            <div>{item.left.Body}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-result__column table-result__column--border-left\">\r\n                        <div className=\"table-margin\">\r\n                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {onCopy(item, \"right\")}}>\r\n                                Cliquez ici\r\n                            </button>\r\n                            <h3>{item.right.Url}</h3>\r\n                            <div className=\"table-result__column--time-span\">\r\n                                Time: {item.right.TimeMs / 1000} seconds\r\n                            </div>\r\n                            <div>{item.right.Body}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-result__row table-result__row--overflow\"\r\n                     dangerouslySetInnerHTML={{__html: diff(item.left.Body, item.right.Body)}}\r\n                />\r\n            </>\r\n        )}\r\n    </div>;\r\n}\r\n\r\nexport default TableItem;","const levenshtein = require('js-levenshtein');\r\n\r\nexport const flattenObject = (origin, destinationDictionnary = {}, prefix = \"\", excludes=[]) => {\r\n    if (typeof origin === 'string') {\r\n        return null;\r\n    }\r\n    if (Array.isArray(origin)) {\r\n        origin.map((e, index) => flattenObject(e, destinationDictionnary, index.toString()+ \"_\", excludes));\r\n    }\r\n    for (let propertyName in origin) {\r\n        if(excludes.includes(propertyName)){\r\n            continue;\r\n        }\r\n        const value = origin[propertyName];\r\n        if (typeof value === 'string') {\r\n            destinationDictionnary[prefix+propertyName] = value;\r\n        } else if (typeof value === 'object') {\r\n            flattenObject(value, destinationDictionnary, prefix+propertyName+\"_\", excludes);\r\n        }\r\n    }\r\n    return destinationDictionnary;\r\n};\r\n\r\n\r\nexport const levenshteinBetweenTwoDictionnary = (leftDictionnary, rightDictionnary) => {\r\n    const score =  {}\r\n    for (const [key, leftValue] of Object.entries(leftDictionnary)) {\r\n\r\n        \r\n        let rightValue = null;\r\n        if (key in rightDictionnary){\r\n            rightValue = rightDictionnary[key]\r\n        }        \r\n        score[key] = levenshtein(leftValue ?? \"\", rightValue ?? \"\");\r\n    }\r\n    return score;\r\n}\r\n\r\nfunction parseToObject(body, excludes=[]) {\r\n    try {\r\n        const leftBody = JSON.parse(body)\r\n        const leftDic = flattenObject(leftBody, {}, \"\", excludes);\r\n        return leftDic;\r\n    } catch (e) {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const totalLevenshtein = (items, excludes = [], flattenIndexKey=true) => {\r\n    const score =  {}\r\n    const regex = /[0-9]+_/gi;\r\n    items.forEach(item => {\r\n        const leftDic = parseToObject(item.left.Body, excludes);\r\n        const rightDic = parseToObject(item.right.Body, excludes);\r\n        const score_item = levenshteinBetweenTwoDictionnary(leftDic, rightDic)\r\n        for (const [key, value] of Object.entries(score_item)) {\r\n            let newKey = key;\r\n            if(flattenIndexKey) {\r\n                newKey = key.replace(regex, '')\r\n            }\r\n            if (newKey in score) {\r\n                score[newKey].score += score_item[key];\r\n                score[newKey].number_ok += value ===0 ? 1:0;\r\n                score[newKey].number_ko += value !== 0 ? 1: 0;\r\n            } else {\r\n                score[newKey] = {\r\n                  score: value, \r\n                  number_ok: value ===0 ? 1:0,\r\n                  number_ko: value !== 0 ? 1: 0,\r\n                } \r\n            }\r\n        }\r\n    })\r\n    return score;\r\n}","import React from \"react\";\r\nimport {totalLevenshtein} from \"./score\";\r\nimport {filterItems} from './TableResult';\r\n\r\nconst computeTotalTimeMs = (items) => {\r\n    const total = {\r\n        rightTimeMs: 0,\r\n        leftTimeMs: 0,\r\n    };\r\n    items.forEach(item => {\r\n            total.rightTimeMs = total.rightTimeMs + item.right.TimeMs;\r\n            total.leftTimeMs = total.leftTimeMs + item.left.TimeMs;\r\n        }\r\n    )\r\n    return total;\r\n}\r\n\r\nconst orderByStatusCode = (items) => {\r\n    const statusCodes = {};\r\n    items.forEach(item => {\r\n\r\n            if(!item.right.StatusCode || !item.left.StatusCode){\r\n                return item;\r\n            }\r\n\r\n            if(!statusCodes[item.right.StatusCode.toString()]){\r\n                statusCodes[item.right.StatusCode.toString()] = { right: 1, left:0 };\r\n            } else{\r\n                statusCodes[item.right.StatusCode.toString()].right ++;\r\n            }\r\n\r\n            if(!statusCodes[item.left.StatusCode.toString()]){\r\n                statusCodes[item.left.StatusCode.toString()] = { right: 0, left:1 };\r\n            } else{\r\n                statusCodes[item.left.StatusCode.toString()].left ++;\r\n            }\r\n        }\r\n    )\r\n    return statusCodes;\r\n}\r\n\r\nconst StatusCode = ({statusCodes}) =>{\r\n    const statuses =  Object.keys(statusCodes).map(function(key, index) {\r\n        const value = statusCodes[key];\r\n        return <div className=\"stats__results\" key={key}>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Status Code : {key} </span></div>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Nombre à gauche : {value.left} </span></div>\r\n            <div className=\"stats__results-div\"> <span>Nombre à droite : {value.right} </span></div>\r\n        </div>\r\n    });\r\n\r\n    return <>{statuses}</>\r\n}\r\n\r\nconst Scores = ({scores}) =>{\r\n\r\n    const keys = Object.keys(scores);\r\n    const ScoreItems =  keys.map(function(key, index) {\r\n        const value = scores[key];\r\n        return <div className=\"stats__results\" key={key}>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Clé : {key} </span></div>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <ul>\r\n                    <li>Levenshtein score : {value.score} </li>\r\n                    <li>Number OK : {value.number_ok} </li>\r\n                    <li>Number KO : {value.number_ko} </li>\r\n                    <li>Number Total : {value.number_ok + value.number_ko} </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"stats__results-div\"> <span>Percentage OK : {Math.round((value.number_ok / (value.number_ok + value.number_ko))*100*100)/100} % </span></div>\r\n        </div>\r\n    });\r\n\r\n    return <>{ScoreItems}</>\r\n}\r\n\r\nconst StatsTable = ({state, setState, items}) => {\r\n    const totalTimeMs = computeTotalTimeMs(items);\r\n    const statusCodes = orderByStatusCode(items);\r\n    const levenshteinScores = totalLevenshtein(items, [\"document_id\", \"document_type\"]);\r\n    return(\r\n        <>\r\n            <div className=\"stats\" key=\"StatsTableKey\">\r\n                <div className=\"stats__title\">\r\n                    <span>Statistiques :</span>\r\n                    <div className=\"table-result__collapse-button\" onClick={(e) => {setState({...state, isStatsTableShowed: !state.isStatsTableShowed})}}>{state.isStatsTableShowed ? \"-\" : \"+\"}</div>\r\n                </div>\r\n                {state.isStatsTableShowed && (\r\n                    <>\r\n                        <div className=\"stats__results\">\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Fichiers OK : {filterItems(items, \"OK\").length}</span></div>\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Fichiers KO : {filterItems(items, \"KO\").length}</span></div>\r\n                            <div className=\"stats__results-div\"><span>Total : {items.length}</span></div>\r\n                        </div>\r\n                        <div className=\"stats__results\">\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps total gauche : {totalTimeMs.leftTimeMs / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps total droite : {totalTimeMs.rightTimeMs / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div\"><span>Différence : {(totalTimeMs.rightTimeMs - totalTimeMs.leftTimeMs) / 1000} secondes soit +{Math.round((totalTimeMs.leftTimeMs / totalTimeMs.rightTimeMs) *100)}% de gain</span></div>\r\n                        </div>\r\n                        <div className=\"stats__results\">\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps moyen gauche : {(totalTimeMs.leftTimeMs / items.length) / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps moyen droite : {(totalTimeMs.rightTimeMs / items.length) / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div\"><span>Différence : {((totalTimeMs.rightTimeMs - totalTimeMs.leftTimeMs) / items.length) / 1000} secondes soit +{Math.round((totalTimeMs.leftTimeMs / totalTimeMs.rightTimeMs) *100)}% </span></div>\r\n                        </div>\r\n                        <StatusCode statusCodes={statusCodes}  />\r\n                        <Scores scores={levenshteinScores}/>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatsTable;","import {Textarea} from \"@axa-fr/react-toolkit-form-input-textarea\";\r\nimport Button from \"@axa-fr/react-toolkit-button\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst ApplyTextArea = ({labelText, updateRegex}) => {\r\n    \r\n    const [state, setState] = useState({\r\n        textAreaContent: \"\"\r\n    });\r\n    \r\n    return(\r\n        <>\r\n            <p className=\"tabs__title\">{labelText}</p>\r\n            <Textarea\r\n                id=\"text_area_regexModifier\"\r\n                name=\"TextAreaRegexModifier\"\r\n                value={state.textAreaContent}\r\n                onChange={(e) => {\r\n                    setState({\r\n                        textAreaContent: e.value\r\n                    })\r\n                }}\r\n            />\r\n            <Button onClick={() => updateRegex(state.textAreaContent)}>Appliquer</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ApplyTextArea;","import React, {useState} from \"react\";\r\nimport {File} from \"@axa-fr/react-toolkit-form-input-file\";\r\nimport {SelectBase} from \"@axa-fr/react-toolkit-form-input-select\";\r\nimport {Tabs} from \"@axa-fr/react-toolkit-all\";\r\nimport Button from '@axa-fr/react-toolkit-button';\r\nimport {Textarea} from \"@axa-fr/react-toolkit-form-input-textarea\";\r\nimport cuid from \"cuid\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport ApplyTextArea from \"./ApplyTextArea\";\r\n\r\nconst optionsSelect= [\r\n    {value: 'KO', label: \"KO\"},\r\n    {value : 'OK', label: \"OK\"},\r\n    {value : 'Tout', label: 'Tout'}\r\n];\r\n\r\nconst extensionsSelect = [\r\n    {value: 'Tout', label: 'Tout'},\r\n    {value: 'PNG', label: 'PNG'},\r\n    {value: 'JPG/JPEG', label: 'JPG/JPEG'},\r\n    {value: 'PDF', label: 'PDF'},\r\n    {value: 'TIFF', label: 'TIFF'}\r\n];\r\n\r\nconst timeSelect = [\r\n    {value: 'Neutre', label:'Neutre'},\r\n    {value: 'Croissant', label: 'Croissant'},\r\n    {value: 'Décroissant', label: 'Décroissant'}\r\n];\r\n\r\nconst timeSideVariables = [\r\n    {value: 'Gauche', label: 'Gauche'},\r\n    {value: 'Droite', label: 'Droite'}\r\n]\r\n\r\nlet emptyFile = false;\r\n\r\nconst FileTreatment = ({state, setState}) => {\r\n\r\n    const [filterState, setFilterState] = useState({\r\n            filterRightTemp: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`,\r\n            filterLeftTemp: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing left\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`\r\n    });\r\n\r\n    const mapItems = (data) => (data.map(item => {\r\n        return {\r\n            fileName: item.FileName,\r\n            left: { Url: item.Left.Url, FileName: item.Left.FileName, FileDirectory: item.Left.FileDirectory, ImageDirectory: item.Left.ImageDirectory, ImageDirectoryRegex: item.Left.ImageDirectoryRegex, StatusCode: item.Left.StatusCode, Body: item.Left.Body, Headers: item.Left.Headers, TimeMs: item.Left.TimeMs, TicksAt: item.Left.TicksAt },\r\n            right: { Url: item.Right.Url, FileName: item.Right.FileName, FileDirectory: item.Right.FileDirectory, ImageDirectory: item.Right.ImageDirectory, ImageDirectoryRegex: item.Right.ImageDirectoryRegex, StatusCode: item.Right.StatusCode, Body: item.Right.Body, Headers: item.Right.Headers, TimeMs: item.Right.TimeMs, TicksAt: item.Right.TicksAt },\r\n            id : cuid(),\r\n            parse: false,\r\n            collapse: true,\r\n        }\r\n    }));\r\n    \r\n    const compareStatusCode = (status, result) => {\r\n        const strStatus = status.toString();\r\n        for(let i = 0; i < result.length; i++){\r\n            if(result[i].value === strStatus){\r\n                return;\r\n            }\r\n        }\r\n        const newItem = {value: strStatus, label: strStatus};\r\n        result.push(newItem);\r\n    }\r\n    \r\n    const setStatusFilterItems = (newItems) => {\r\n        let allCodes = {value: \"Tout\", label: \"Tout\"};\r\n        let result = [allCodes];\r\n        newItems.forEach(item => {\r\n            compareStatusCode(item.left.StatusCode, result);\r\n            compareStatusCode(item.right.StatusCode, result);\r\n        })\r\n        return result;\r\n    }\r\n    \r\n    const loadFile = e => {\r\n        const input = e.values[0].file;\r\n        if(input.size > 0){\r\n            emptyFile = false;\r\n            const reader = new FileReader();\r\n            let imageDirectory;\r\n            reader.onloadend = async () => {\r\n                const result = JSON.parse(reader.result);\r\n                const isVersion0 = Array.isArray(result)\r\n                const location =  isVersion0? \"\" : result.CompareLocation;\r\n                const mappedItems = mapItems( isVersion0 ? result : result.Content);\r\n                const statusCodeItems = setStatusFilterItems(mappedItems);\r\n                if (mappedItems.length !== 0) {\r\n                    imageDirectory = mappedItems[0].right.ImageDirectory;\r\n                }\r\n                setState\r\n                ({...state, fileName: e.values[0].file.name, imageDirectory: imageDirectory, compareLocation: location, items: mappedItems, statusCodes: statusCodeItems});\r\n            }\r\n            reader.readAsText(input);\r\n        }\r\n        else{\r\n            setState({...state, fileName: e.values[0].file.name, items: []});\r\n            emptyFile = true;\r\n        }\r\n    };\r\n    \r\n    const updateRegex = (newValue) => {\r\n        setState({...state,\r\n            filters: {\r\n                ...state.filters,\r\n                regexModifier: newValue\r\n            }\r\n        });\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"file-input\"> \r\n                <File\r\n                    id=\"file_loader\"\r\n                    name=\"placeJsonFile\"\r\n                    accept=\"application/*, text/plain\"\r\n                    onChange={loadFile}\r\n                    maxSize={2000000000}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"tabs\">\r\n                <Tabs className=\"tabs__header\">\r\n                    <Tabs.Tab title=\"Filtres\">\r\n                        <div className=\"tabs__container tabs__container--justify\">\r\n                            <div className=\"tabs__filter-container\">\r\n                                <p className=\"tabs__title\">État de fichier :</p>\r\n                                <SelectBase\r\n                                    id=\"select_type\"\r\n                                    name=\"SelectType\"\r\n                                    value={state.filters.filterName}\r\n                                    options={optionsSelect}\r\n                                    onChange={(e) => {\r\n                                        setState({...state,\r\n                                            filters: {\r\n                                                ...state.filters,\r\n                                                filterName:e.value,\r\n                                                pagingCurrent: 1\r\n                                            }\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <p className=\"tabs__title\">Extensions de fichiers:</p>\r\n                                <SelectBase\r\n                                    id=\"extension_type\"\r\n                                    name=\"ExtensionType\"\r\n                                    value={state.filters.extensionName}\r\n                                    options={extensionsSelect}\r\n                                    onChange={(e) => {\r\n                                        setState({...state,\r\n                                            filters: {\r\n                                                ...state.filters,\r\n                                                extensionName:e.value,\r\n                                                pagingCurrent: 1\r\n                                            }\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <p className=\"tabs__title\">Statuts serveur:</p>\r\n                                <SelectBase\r\n                                    id=\"status_code_type\"\r\n                                    name=\"StatusCodeType\"\r\n                                    value={state.filters.currentStatusCode}\r\n                                    options={state.statusCodes}\r\n                                    onChange={(e) => {\r\n                                        setState({...state,\r\n                                            filters: {\r\n                                                ...state.filters,\r\n                                                currentStatusCode:e.value,\r\n                                                pagingCurrent: 1\r\n                                            }\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"tabs__filter-container\">\r\n                                <p className=\"tabs__title\">Barre de recherche:</p>\r\n                                <Textarea\r\n                                    id=\"text_area_searchbar\"\r\n                                    name=\"TextAreaSearchBar\"\r\n                                    value={state.filters.searchedString}\r\n                                    onChange={(e) => {\r\n                                        setState({\r\n                                            ...state,\r\n                                            filters: {\r\n                                                ...state.filters,\r\n                                                searchedString: e.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Tabs.Tab>\r\n                    <Tabs.Tab title=\"Temps\">\r\n                        <div className=\"tabs__container tabs__container--justify\">\r\n                            <div className=\"tabs__filter-container\">\r\n                                <p className=\"tabs__title\">Côté du filtre:</p>\r\n                                <SelectBase\r\n                                    id=\"time_side\"\r\n                                    name=\"TimeSide\"\r\n                                    value={state.filters.timeSide}\r\n                                    options={timeSideVariables}\r\n                                    onChange={(e) => {\r\n                                        setState({\r\n                                            ...state,\r\n                                            filters: {\r\n                                                ...state.filters,\r\n                                                timeSide: e.value,\r\n                                                pagingCurrent: 1\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                                <p className=\"tabs__title\">Temps:</p>\r\n                                <SelectBase\r\n                                    id=\"time_filter\"\r\n                                    name=\"TimeFilter\"\r\n                                    value={state.filters.sortTimeType}\r\n                                    options={timeSelect}\r\n                                    onChange={(e) => {\r\n                                        setState({\r\n                                            ...state,\r\n                                            filters: {\r\n                                                ...state.filters,\r\n                                                sortTimeType: e.value,\r\n                                                pagingCurrent: 1\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Tabs.Tab>\r\n                    <Tabs.Tab title=\"Scripts\">\r\n                        <div className=\"tabs__container\">\r\n                            <div className=\"tabs__function-filter\">\r\n                                <label>filtre gauche</label>\r\n                                <AceEditor\r\n                                    mode=\"javascript\"\r\n                                    theme=\"github\"\r\n                                    onChange={e => setFilterState({ ...filterState, filterLeftTemp: e})}\r\n                                    value={filterState.filterLeftTemp}\r\n                                    name=\"AceEditorLeft\"\r\n                                    editorProps={{ $blockScrolling: true }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"tabs__function-filter\">\r\n                                <label>filtre droite</label>\r\n                                <AceEditor\r\n                                    mode=\"javascript\"\r\n                                    theme=\"github\"\r\n                                    onChange={e => setFilterState({...filterState, filterRightTemp: e})}\r\n                                    value={filterState.filterRightTemp}\r\n                                    name=\"AceEditorRight\"\r\n                                    editorProps={{ $blockScrolling: true }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tabs__container\">\r\n                            <div className=\"tabs__separator\">\r\n                                <Button onClick={() => {\r\n                                    setState({\r\n                                        ...state,\r\n                                        filters: {\r\n                                            ...state.filters,\r\n                                            filterLeft: filterState.filterLeftTemp,\r\n                                            filterRight: filterState.filterRightTemp,\r\n                                        }\r\n                                    })\r\n                                }}>Appliquer</Button>\r\n                            </div>\r\n                            <Button onClick={() => {\r\n                                const filterL = `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing left\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`;\r\n                                const filterR = `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`;\r\n                                setFilterState({\r\n                                    ...filterState,\r\n                                    filterLeftTemp: filterL,\r\n                                    filterRightTemp: filterR,\r\n                                })\r\n                            }}>Réinitialiser</Button>\r\n                        </div>\r\n                    </Tabs.Tab>\r\n                    <Tabs.Tab title=\"Configuration\">\r\n                        <div className=\"tabs__container tabs__container--justify\">\r\n                            <div className=\"tabs__filter-container\">\r\n                                <div className=\"tabs__filter-container tabs__separator\">\r\n                                    <ApplyTextArea\r\n                                        labelText=\"Modifier la regex de sélection des images\"\r\n                                        updateRegex={updateRegex}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Tabs.Tab>\r\n                </Tabs>\r\n            </div>\r\n            \r\n            {emptyFile && \r\n                <h2 className=\"error-message\">\r\n                    Le fichier est vide !\r\n                </h2>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileTreatment;","import React, { useState} from \"react\";\r\nimport {Header, Name, Title} from \"@axa-fr/react-toolkit-layout-header\";\r\nimport TableResult from \"./TableResult\";\r\nimport FileTreatment from \"./FileTreatment\";\r\nimport logo from '@axa-fr/react-toolkit-core/dist/assets/logo-axa.svg';\r\nimport './HandleFile.scss';\r\n\r\nconst HandleFile = () =>{\r\n\r\n    const [state, setState] = useState({\r\n        fileName: \"Comparer un fichier JSON\",\r\n        imageDirectory: \"\",\r\n        compareLocation: \"\",\r\n        items:[],\r\n        filters: {\r\n            filterName: \"KO\",\r\n            extensionName: \"Tout\",\r\n            currentStatusCode: \"Tout\",\r\n            searchedString: \"\",\r\n            regexModifier: \"\",\r\n            appliedScript: false,\r\n            sortTimeType: \"Neutre\",\r\n            timeSide: \"Gauche\",\r\n            pagingSelect: 50,\r\n            pagingCurrent: 1,\r\n            filterRight: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`,\r\n            filterLeft: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing left\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`,\r\n            filterRightTemp: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`,\r\n            filterLeftTemp: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing left\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`\r\n        },\r\n        statusCodes: [{value: \"Tout\", label:\"Tout\"}],\r\n        isStatsTableShowed: true\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Name\r\n                    title=\"ML-CLI\"\r\n                    subtitle=\"Made by AXA\"\r\n                    img={logo}\r\n                    alt=\"Logo AXA\"\r\n                />\r\n            </Header>\r\n            <Title title={state.fileName === \"Comparer un fichier JSON\" ? state.fileName: \"Fichier en cours de visualisation : \" + state.fileName}/>\r\n            <FileTreatment state={state} setState={setState} />\r\n            {state.items.length === 0 ? \"\" : <TableResult state={state} setState={setState} /> }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HandleFile;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/grid.css';\r\nimport './scss/reboot.css';\r\nimport '@axa-fr/react-toolkit-all/dist/style/af-components.css';\r\nimport '@axa-fr/react-toolkit-table/dist/af-table.css';\r\nimport '@axa-fr/react-toolkit-form-input-select/dist/select.scss';\r\nimport HandleFile from \"./handleFiles\";\r\n\r\nexport const App = () => (\r\n    <HandleFile />\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}