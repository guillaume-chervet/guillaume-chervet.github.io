{"version":3,"sources":["handleFiles/TableResult.js","handleFiles/FileTreatment.js","handleFiles/HandleFile.js","index.js"],"names":["filterItems","items","filterName","filter","item","left","Body","right","dmp","diff_match_patch","diff","text1","text2","Diff_Timeout","parseFloat","d","diff_main","diff_cleanupSemantic","diff_prettyHtml","TableResult","state","setState","filteredFiles","length","className","map","key","id","fileName","TimeMs","onClick","newItems","newItem","collapse","push","collapseItem","type","side","parse","parseItem","Url","data","dangerouslySetInnerHTML","__html","stringify","require","FileTreatment","tryFormatOutput","jsonString","JSON","e","name","accept","onChange","input","values","file","reader","FileReader","onloadend","result","Left","Right","FileName","cuid","readAsText","value","options","optionsSelect","HandleFile","useState","label","parseRight","parseLeft","useEffect","title","subtitle","img","logo","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e23705c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport diff_match_patch from 'diff-match-patch';\r\nimport JSONPretty from 'react-json-pretty';\r\n\r\n\r\nconst filterItems = (items, filterName) => {\r\n    return items.filter(item => {\r\n        if (filterName === \"KO\"){\r\n            return item.left.Body !== item.right.Body;\r\n        }\r\n        if (filterName === \"OK\"){\r\n            return item.left.Body === item.right.Body;\r\n        }\r\n        else {\r\n            return items;\r\n        }\r\n    });\r\n}\r\n\r\nconst dmp = new diff_match_patch();\r\n\r\nconst diff = (text1, text2) => {\r\n    dmp.Diff_Timeout = parseFloat(10);\r\n    const d = dmp.diff_main(text1, text2);\r\n    dmp.diff_cleanupSemantic(d);\r\n    return dmp.diff_prettyHtml(d);\r\n};\r\n\r\nconst TableResult = ({state, setState}) => {\r\n\r\n    const collapseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, collapse: !item.collapse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n\r\n    const parseItem = (id, side) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, parse: !item.parse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n\r\n    const filteredFiles = filterItems(state.items, state.filterName);\r\n    return <>\r\n        {filteredFiles.length === 0 ? (\r\n            <h2 className=\"table-title\">Il n'y a aucun fichier de type {state.filterName} !</h2>\r\n        ) : (\r\n            <>\r\n                <div className=\"stats\">\r\n                    <div className=\"stats__title\">\r\n                        Statistiques :\r\n                    </div>\r\n                    <div className=\"stats__results\">\r\n                        <div className=\"stats__results-div stats__results-div--border\">\r\n                            <span>Fichiers OK : {filterItems(state.items, \"OK\").length}</span></div>\r\n                        <div className=\"stats__results-div stats__results-div--border\">\r\n                            <span>Fichiers KO : {filterItems(state.items, \"KO\").length}</span></div>\r\n                        <div className=\"stats__results-div\"><span>Total : {state.items.length}</span></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {filteredFiles.map(item => (\r\n                    <div key={item.id} className=\"table-result\">\r\n\r\n                        <div className=\"table-result__header\">\r\n                            <div>\r\n                                <p>Résultat fichier : {item.fileName}</p>\r\n                                <h2>{item.left.Body !== item.right.Body ? <span className=\"table-result__row--red\">KO</span> :\r\n                                <span className=\"table-result__row--green\">OK</span>} Ratio temps à gauche - temps à droite\r\n                                : {(item.right.TimeMs - item.left.TimeMs) / 1000} secondes</h2>\r\n                            </div>\r\n                            <div className=\"table-result__collapse-button\" onClick={() => {collapseItem(item.id)}}>{item.collapse ? \"-\" : \"+\"}</div>\r\n                        </div>\r\n                        {item.collapse && (\r\n                            <>\r\n                                <div className=\"table-result__parse-button-container\">\r\n                                    <button className=\"table-result__parse-button\" type=\"button\" onClick={() => {parseItem(item.id, \"right\")}}>{item.parse ? \"Déparse\" : \"Parse\"}</button>\r\n                                </div>\r\n                                <div className=\"table-result__column-container\">\r\n                                    <div className=\"table-result__column\">\r\n                                        <div className=\"table-margin\">\r\n                                            <h3>{item.left.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">Time: {item.left.TimeMs / 1000} seconds</div>\r\n                                            <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.left.Body}></JSONPretty>: item.left.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"table-result__column table-result__column--border-left\">\r\n                                        <div className=\"table-margin\">\r\n                                            <h3>{item.right.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">\r\n                                                Time: {item.right.TimeMs / 1000} seconds\r\n                                            </div>\r\n                                        <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.right.Body}></JSONPretty>: item.right.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"table-result__row table-result__row--overflow\"\r\n                                dangerouslySetInnerHTML={{__html: diff(item.left.Body, item.right.Body)}}\r\n                                />\r\n                            </>\r\n                        )}\r\n\r\n                    </div>\r\n                ))}\r\n            </>\r\n        )}\r\n    </>;\r\n}\r\n\r\nexport default TableResult;\r\n","import React from \"react\";\r\nimport {File} from \"@axa-fr/react-toolkit-form-input-file\";\r\nimport {SelectBase} from \"@axa-fr/react-toolkit-form-input-select\";\r\nimport cuid from \"cuid\";\r\nconst stringify = require('json-stable-stringify');\r\n\r\nconst FileTreatment = ({state, setState}) => {\r\n\r\nconst tryFormatOutput = (data) => {\r\n    try {\r\n        const jsonString = JSON.parse(data);\r\n        return stringify(jsonString);\r\n    } catch (e){\r\n        return data;\r\n    }\r\n}\r\n\r\nconst mapItems = (data) => (data.map(item => {\r\n    const left = tryFormatOutput(item.Left.Body);\r\n    const right = tryFormatOutput(item.Right.Body);\r\n    return {\r\n        fileName: item.FileName,\r\n        left: { Body: left, TimeMs: item.Left.TimeMs, Url: item.Left.Url },\r\n        right: { Body: right, TimeMs: item.Right.TimeMs, Url: item.Right.Url },\r\n        id : cuid(),\r\n        parse: false,\r\n        collapse: true,\r\n    }\r\n}));\r\n\r\n    const loadFile = e => {\r\n        const input = e.values[0].file;\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            const result = JSON.parse(reader.result)\r\n            setState({...state, items: mapItems(result)});\r\n        }\r\n        reader.readAsText(input);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"file-input\">\r\n                <File\r\n                    id=\"file_loader\"\r\n                    name=\"placeJsonFile\"\r\n                    accept=\"application/*, text/plain\"\r\n                    onChange={loadFile}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"select__title\">État de fichier :</p>\r\n                <SelectBase\r\n                    id=\"select_type\"\r\n                    name=\"SelectType\"\r\n                    value={state.filterName}\r\n                    options={state.optionsSelect}\r\n                    onChange={(e) => {\r\n                        setState({...state, filterName: e.value});\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileTreatment;","import React, {useEffect, useState} from \"react\";\r\nimport {Header, Name, Title} from \"@axa-fr/react-toolkit-layout-header\";\r\nimport TableResult from \"./TableResult\";\r\nimport FileTreatment from \"./FileTreatment\";\r\nimport logo from '@axa-fr/react-toolkit-core/dist/assets/logo-axa.svg';\r\nimport './HandleFile.scss';\r\n\r\nconst HandleFile = () =>{\r\n\r\n    const [state, setState] = useState({\r\n        filterName: \"KO\",\r\n        items:[],\r\n        optionsSelect: [\r\n            {value: 'KO', label: \"KO\"},\r\n            {value : 'OK', label: \"OK\"},\r\n            {value : 'Tout', label: 'Tout'},\r\n        ],\r\n        parseRight: [],\r\n        parseLeft: []\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Name\r\n                    title=\"ML-CLI\"\r\n                    subtitle=\"Made by AXA\"\r\n                    img={logo}\r\n                    alt=\"Logo AXA\"\r\n                />\r\n            </Header>\r\n            <Title title=\"Comparer un fichier JSON\"/>\r\n            <FileTreatment state={state} setState={setState} />\r\n            {state.items.length === 0 ? \"\" : <TableResult state={state} setState={setState} /> }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HandleFile;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@axa-fr/react-toolkit-all/dist/style/af-components.css';\r\nimport '@axa-fr/react-toolkit-table/dist/af-table.css';\r\nimport '@axa-fr/react-toolkit-form-input-select/dist/select.scss';\r\nimport HandleFile from \"./handleFiles\";\r\n\r\nexport const App = () => (\r\n    <HandleFile />\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}