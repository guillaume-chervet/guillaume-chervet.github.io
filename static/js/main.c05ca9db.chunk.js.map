{"version":3,"sources":["handleFiles/FileTreatment.js","handleFiles/score.js","handleFiles/StatsTable.js","handleFiles/TableResult.js","handleFiles/HandleFile.js","index.js"],"names":["optionsSelect","value","label","extensionsSelect","emptyFile","FileTreatment","state","setState","tryFormatOutput","data","jsonString","JSON","parse","stringify","e","mapItems","map","item","left","Left","Body","right","Right","fileName","FileName","TimeMs","Url","FileDirectory","StatusCode","id","cuid","collapse","formatBody","bodyJson","side","rawBodyInput","rawBodyOutput","eval","formatJson","items","filterLeft","filterRight","newItem","error","console","log","compareStatusCode","status","result","strStatus","toString","i","length","push","setStatusFilterItems","newItems","forEach","loadFile","input","values","file","size","reader","FileReader","onloadend","statusCodeItems","name","statusCodes","readAsText","className","accept","onChange","Tab","title","filters","filterName","options","pagingCurrent","extensionName","currentStatusCode","searchedString","mode","theme","editorProps","$blockScrolling","levenshtein","require","flattenObject","origin","destinationDictionnary","prefix","excludes","propertyName","Array","isArray","index","includes","levenshteinBetweenTwoDictionnary","leftDictionnary","rightDictionnary","score","Object","entries","key","leftValue","rightValue","parseToObject","body","leftBody","leftDic","statuses","keys","Scores","scores","ScoreItems","number_ok","number_ko","Math","round","StatsTable","totalTimeMs","total","rightTimeMs","leftTimeMs","computeTotalTimeMs","orderByStatusCode","levenshteinScores","flattenIndexKey","regex","rightDic","score_item","newKey","replace","totalLevenshtein","onClick","isStatsTableShowed","filterItems","filter","reverseString","str","from","reverse","join","getExtensionName","reversed","start","indexOf","end","extension","substr","dmp","diff_match_patch","diff","text1","text2","Diff_Timeout","parseFloat","d","diff_main","diff_cleanupSemantic","diff_prettyHtml","computeNumberPages","numberItems","numberItemsControlled","ceil","TableResult","filteredStatusCodes","statusCode","intStatusCode","parseInt","filterStatusCode","filteredExtensions","toUpperCase","pageItems","currentPage","pageIndex","controlledNumberItems","beginIndex","lastIndex","slice","filterPaging","filterSearchBar","pagingSelect","element","document","createElement","lastIndexOf","appendChild","select","execCommand","removeChild","collapseItem","type","parseItem","dangerouslySetInnerHTML","__html","numberPages","page","HandleFile","useState","subtitle","img","logo","alt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c05ca9db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {File} from \"@axa-fr/react-toolkit-form-input-file\";\r\nimport {SelectBase} from \"@axa-fr/react-toolkit-form-input-select\";\r\nimport {Tabs} from \"@axa-fr/react-toolkit-all\";\r\nimport {Textarea} from \"@axa-fr/react-toolkit-form-input-textarea\";\r\nimport cuid from \"cuid\";\r\nimport {stringify} from \"json-stable-stringify\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\n\r\nconst optionsSelect= [\r\n    {value: 'KO', label: \"KO\"},\r\n    {value : 'OK', label: \"OK\"},\r\n    {value : 'Tout', label: 'Tout'}\r\n];\r\n\r\nconst extensionsSelect = [\r\n    {value: 'Tout', label: 'Tout'},\r\n    {value: 'PNG', label: 'PNG'},\r\n    {value: 'JPG/JPEG', label: 'JPG/JPEG'},\r\n    {value: 'PDF', label: 'PDF'},\r\n    {value: 'TIFF', label: 'TIFF'}\r\n];\r\n\r\nlet emptyFile = false;\r\n\r\nconst FileTreatment = ({state, setState}) => {\r\n\r\n    const tryFormatOutput = (data) => {\r\n        try {\r\n            const jsonString = JSON.parse(data);\r\n            return stringify(jsonString);\r\n        } catch (e){\r\n            return data;\r\n        }\r\n    };\r\n\r\n    const mapItems = (data) => (data.map(item => {\r\n        const left = tryFormatOutput(item.Left.Body);\r\n        const right = tryFormatOutput(item.Right.Body);\r\n        return {\r\n            fileName: item.FileName,\r\n            left: { Body: left, TimeMs: item.Left.TimeMs, Url: item.Left.Url, FileDirectory: item.Left.FileDirectory, StatusCode: item.Left.StatusCode},\r\n            right: { Body: right, TimeMs: item.Right.TimeMs, Url: item.Right.Url, FileDirectory: item.Right.FileDirectory, StatusCode: item.Right.StatusCode },\r\n            id : cuid(),\r\n            parse: false,\r\n            collapse: true,\r\n        }\r\n    }));\r\n\r\n    const formatBody = (bodyJson, side) => {\r\n        let rawBodyInput = bodyJson;\r\n        let rawBodyOutput = rawBodyInput\r\n        eval(side);\r\n        return rawBodyOutput;\r\n    }\r\n\r\n    const formatJson = (items) => {\r\n        if (!state.filterLeft && !state.filterRight) {\r\n            return items;\r\n        } else {\r\n            try {\r\n                return items.map(item => {\r\n                    const newItem = item;\r\n                    if (state.filterLeft) {\r\n                        newItem.left.Body = formatBody(item.left.Body, state.filterLeft);\r\n                    }\r\n                    if (state.filterRight) {\r\n                        newItem.right.Body = formatBody(item.right.Body, state.filterRight);\r\n                    }\r\n                    return newItem;\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n                return items\r\n            }\r\n        }\r\n    };\r\n    \r\n    const compareStatusCode = (status, result) => {\r\n        const strStatus = status.toString();\r\n        for(let i = 0; i < result.length; i++){\r\n            if(result[i].value === strStatus){\r\n                return;\r\n            }\r\n        }\r\n        const newItem = {value: strStatus, label: strStatus};\r\n        result.push(newItem);\r\n    }\r\n    \r\n    const setStatusFilterItems = (newItems) => {\r\n        let allCodes = {value: \"Tout\", label: \"Tout\"};\r\n        let result = [allCodes];\r\n        newItems.forEach(item => {\r\n            compareStatusCode(item.left.StatusCode, result);\r\n            compareStatusCode(item.right.StatusCode, result);\r\n        })\r\n        return result;\r\n    }\r\n    \r\n    const loadFile = e => {\r\n        const input = e.values[0].file;\r\n        if(input.size > 0){\r\n            emptyFile = false;\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const result = JSON.parse(reader.result);\r\n                const newItems = formatJson(mapItems(result));\r\n                const statusCodeItems = setStatusFilterItems(newItems);\r\n                setState({...state, fileName: e.values[0].file.name, items: newItems, statusCodes: statusCodeItems});\r\n            }\r\n            reader.readAsText(input);\r\n        }\r\n        else{\r\n            setState({...state, fileName: e.values[0].file.name, items: []});\r\n            emptyFile = true;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"file-input\">\r\n                <File\r\n                    id=\"file_loader\"\r\n                    name=\"placeJsonFile\"\r\n                    accept=\"application/*, text/plain\"\r\n                    onChange={loadFile}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"tabs\">\r\n                <Tabs className=\"tabs__header\">\r\n                    <Tabs.Tab title=\"Filtres\">\r\n                        <div className=\"tabs__status-filter-container\">\r\n                            <p className=\"tabs__title\">État de fichier :</p>\r\n                            <SelectBase\r\n                                id=\"select_type\"\r\n                                name=\"SelectType\"\r\n                                value={state.filters.filterName}\r\n                                options={optionsSelect}\r\n                                onChange={(e) => {\r\n                                    setState({...state,\r\n                                        filters: {\r\n                                            ...state.filters,\r\n                                            filterName:e.value,\r\n                                            pagingCurrent: 1\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <p className=\"tabs__title\">Extensions de fichiers:</p>\r\n                            <SelectBase\r\n                                id=\"extension_type\"\r\n                                name=\"ExtensionType\"\r\n                                value={state.filters.extensionName}\r\n                                options={extensionsSelect}\r\n                                onChange={(e) => {\r\n                                    setState({...state,\r\n                                        filters: {\r\n                                            ...state.filters,\r\n                                            extensionName:e.value,\r\n                                            pagingCurrent: 1\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <p className=\"tabs__title\">Statuts serveur:</p>\r\n                            <SelectBase\r\n                                id=\"status_code_type\"\r\n                                name=\"StatusCodeType\"\r\n                                value={state.filters.currentStatusCode}\r\n                                options={state.statusCodes}\r\n                                onChange={(e) => {\r\n                                    setState({...state,\r\n                                        filters: {\r\n                                            ...state.filters,\r\n                                            currentStatusCode:e.value,\r\n                                            pagingCurrent: 1\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <p className=\"tabs__title\">Barre de recherche:</p>\r\n                            <Textarea\r\n                                id=\"text_area_searchbar\"\r\n                                name=\"TextAreaSearchBar\"\r\n                                value={state.filters.searchedString}\r\n                                onChange={(e) => {\r\n                                    setState({\r\n                                        ...state,\r\n                                        filters: {\r\n                                            ...state.filters,\r\n                                            searchedString: e.value\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Tabs.Tab>\r\n                    <Tabs.Tab title=\"Scripts\">\r\n                        <div className=\"tabs__container\">\r\n                            <div className=\"tabs__function-filter\">\r\n                                <label>filtre gauche</label>\r\n                                <AceEditor\r\n                                    mode=\"javascript\"\r\n                                    theme=\"github\"\r\n                                    onChange={e => setState({...state, filterLeft: e})}\r\n                                    value={state.filterLeft}\r\n                                    name=\"AceEditorLeft\"\r\n                                    editorProps={{ $blockScrolling: true }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"tabs__function-filter\">\r\n                                <label>filtre droite</label>\r\n                                <AceEditor\r\n                                    mode=\"javascript\"\r\n                                    theme=\"github\"\r\n                                    onChange={e => setState({...state, filterRight: e})}\r\n                                    value={state.filterRight}\r\n                                    name=\"AceEditorRight\"\r\n                                    editorProps={{ $blockScrolling: true }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Tabs.Tab>\r\n                </Tabs>\r\n            </div>\r\n            \r\n            {emptyFile && \r\n                <h2 className=\"error-message\">\r\n                    Le fichier est vide !\r\n                </h2>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileTreatment;","const levenshtein = require('js-levenshtein');\r\n\r\nexport const flattenObject = (origin, destinationDictionnary = {}, prefix = \"\", excludes=[]) => {\r\n    if (typeof origin === 'string') {\r\n        return null;\r\n    }\r\n    if (Array.isArray(origin)) {\r\n        origin.map((e, index) => flattenObject(e, destinationDictionnary, index.toString()+ \"_\", excludes));\r\n    }\r\n    for (let propertyName in origin) {\r\n        if(excludes.includes(propertyName)){\r\n            continue;\r\n        }\r\n        const value = origin[propertyName];\r\n        if (typeof value === 'string') {\r\n            destinationDictionnary[prefix+propertyName] = value;\r\n        } else if (typeof value === 'object') {\r\n            flattenObject(value, destinationDictionnary, prefix+propertyName+\"_\", excludes);\r\n        }\r\n    }\r\n    return destinationDictionnary;\r\n};\r\n\r\n\r\nexport const levenshteinBetweenTwoDictionnary = (leftDictionnary, rightDictionnary) => {\r\n    const score =  {}\r\n    for (const [key, leftValue] of Object.entries(leftDictionnary)) {\r\n\r\n        \r\n        let rightValue = null;\r\n        if (key in rightDictionnary){\r\n            rightValue = rightDictionnary[key]\r\n        }        \r\n        score[key] = levenshtein(leftValue ?? \"\", rightValue ?? \"\");\r\n    }\r\n    return score;\r\n}\r\n\r\nfunction parseToObject(body, excludes=[]) {\r\n    try {\r\n        const leftBody = JSON.parse(body)\r\n        const leftDic = flattenObject(leftBody, {}, \"\", excludes);\r\n        return leftDic;\r\n    } catch (e) {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const totalLevenshtein = (items, excludes = [], flattenIndexKey=true) => {\r\n    const score =  {}\r\n    const regex = /[0-9]+_/gi;\r\n    items.forEach(item => {\r\n        const leftDic = parseToObject(item.left.Body, excludes);\r\n        const rightDic = parseToObject(item.right.Body, excludes);\r\n        const score_item = levenshteinBetweenTwoDictionnary(leftDic, rightDic)\r\n        for (const [key, value] of Object.entries(score_item)) {\r\n            let newKey = key;\r\n            if(flattenIndexKey) {\r\n                newKey = key.replace(regex, '')\r\n            }\r\n            if (newKey in score) {\r\n                score[newKey].score += score_item[key];\r\n                score[newKey].number_ok += value ===0 ? 1:0;\r\n                score[newKey].number_ko += value !== 0 ? 1: 0;\r\n            } else {\r\n                score[newKey] = {\r\n                  score: value, \r\n                  number_ok: value ===0 ? 1:0,\r\n                  number_ko: value !== 0 ? 1: 0,\r\n                } \r\n            }\r\n        }\r\n    })\r\n    return score;\r\n}","import React from \"react\";\r\nimport {totalLevenshtein} from \"./score\";\r\nimport {filterItems} from './TableResult';\r\n\r\nconst computeTotalTimeMs = (items) => {\r\n    const total = {\r\n        rightTimeMs: 0,\r\n        leftTimeMs: 0,\r\n    };\r\n    items.forEach(item => {\r\n            total.rightTimeMs = total.rightTimeMs + item.right.TimeMs;\r\n            total.leftTimeMs = total.leftTimeMs + item.left.TimeMs;\r\n        }\r\n    )\r\n    return total;\r\n}\r\n\r\nconst orderByStatusCode = (items) => {\r\n    const statusCodes = {};\r\n    items.forEach(item => {\r\n\r\n            if(!item.right.StatusCode || !item.left.StatusCode){\r\n                return item;\r\n            }\r\n\r\n            if(!statusCodes[item.right.StatusCode.toString()]){\r\n                statusCodes[item.right.StatusCode.toString()] = { right: 1, left:0 };\r\n            } else{\r\n                statusCodes[item.right.StatusCode.toString()].right ++;\r\n            }\r\n\r\n            if(!statusCodes[item.left.StatusCode.toString()]){\r\n                statusCodes[item.left.StatusCode.toString()] = { right: 0, left:1 };\r\n            } else{\r\n                statusCodes[item.left.StatusCode.toString()].left ++;\r\n            }\r\n        }\r\n    )\r\n    return statusCodes;\r\n}\r\n\r\nconst StatusCode = ({statusCodes}) =>{\r\n    const statuses =  Object.keys(statusCodes).map(function(key, index) {\r\n        const value = statusCodes[key];\r\n        return <div className=\"stats__results\" key={key}>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Status Code : {key} </span></div>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Nombre à gauche : {value.left} </span></div>\r\n            <div className=\"stats__results-div\"> <span>Nombre à droite : {value.right} </span></div>\r\n        </div>\r\n    });\r\n\r\n    return <>{statuses}</>\r\n}\r\n\r\nconst Scores = ({scores}) =>{\r\n\r\n    const keys = Object.keys(scores);\r\n    const ScoreItems =  keys.map(function(key, index) {\r\n        const value = scores[key];\r\n        return <div className=\"stats__results\" key={key}>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <span>Clé : {key} </span></div>\r\n            <div className=\"stats__results-div stats__results-div--border\">\r\n                <ul>\r\n                    <li>Levenshtein score : {value.score} </li>\r\n                    <li>Number OK : {value.number_ok} </li>\r\n                    <li>Number KO : {value.number_ko} </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"stats__results-div\"> <span>Percentage OK : {Math.round((value.number_ok / (value.number_ok + value.number_ko))*100)} % </span></div>\r\n        </div>\r\n    });\r\n\r\n    return <>{ScoreItems}</>\r\n}\r\n\r\nconst StatsTable = ({state, setState}) => {\r\n    const totalTimeMs = computeTotalTimeMs(state.items);\r\n    const statusCodes = orderByStatusCode(state.items);\r\n    const levenshteinScores = totalLevenshtein(state.items, [\"document_id\", \"document_type\"]);\r\n    return(\r\n        <>\r\n            <div className=\"stats\" key=\"StatsTableKey\">\r\n                <div className=\"stats__title\">\r\n                    <span>Statistiques :</span>\r\n                    <div className=\"table-result__collapse-button\" onClick={(e) => {setState({...state, isStatsTableShowed: !state.isStatsTableShowed})}}>{state.isStatsTableShowed ? \"-\" : \"+\"}</div>\r\n                </div>\r\n                {state.isStatsTableShowed && (\r\n                    <>\r\n                        <div className=\"stats__results\">\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Fichiers OK : {filterItems(state.items, \"OK\").length}</span></div>\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Fichiers KO : {filterItems(state.items, \"KO\").length}</span></div>\r\n                            <div className=\"stats__results-div\"><span>Total : {state.items.length}</span></div>\r\n                        </div>\r\n                        <div className=\"stats__results\">\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps total gauche : {totalTimeMs.leftTimeMs / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps total droite : {totalTimeMs.rightTimeMs / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div\"><span>Différence : {(totalTimeMs.rightTimeMs - totalTimeMs.leftTimeMs) / 1000} secondes soit +{Math.round((totalTimeMs.leftTimeMs / totalTimeMs.rightTimeMs) *100)}% de gain</span></div>\r\n                        </div>\r\n                        <div className=\"stats__results\">\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps moyen gauche : {(totalTimeMs.leftTimeMs / state.items.length) / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div stats__results-div--border\">\r\n                                <span>Temps moyen droite : {(totalTimeMs.rightTimeMs / state.items.length) / 1000} secondes</span></div>\r\n                            <div className=\"stats__results-div\"><span>Différence : {((totalTimeMs.rightTimeMs - totalTimeMs.leftTimeMs) / state.items.length) / 1000} secondes soit +{Math.round((totalTimeMs.leftTimeMs / totalTimeMs.rightTimeMs) *100)}% </span></div>\r\n                        </div>\r\n                        <StatusCode statusCodes={statusCodes}  />\r\n                        <Scores scores={levenshteinScores}/>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatsTable;","import React from \"react\";\r\nimport {Paging} from \"@axa-fr/react-toolkit-table\";\r\nimport StatsTable from './StatsTable';\r\nimport diff_match_patch from 'diff-match-patch';\r\nimport JSONPretty from 'react-json-pretty';\r\n\r\nexport const filterItems = (items, filterName) => {\r\n    return items.filter(item => {\r\n        if (filterName === \"KO\"){\r\n            return item.left.Body !== item.right.Body;\r\n        }\r\n        if (filterName === \"OK\"){\r\n            return item.left.Body === item.right.Body;\r\n        }\r\n        else {\r\n            return items;\r\n        }\r\n    });\r\n}\r\n\r\nconst reverseString = (str) => {\r\n    const array = Array.from(str);\r\n    return array.reverse().join(\"\");\r\n}\r\n\r\nconst getExtensionName = (fileName) => {\r\n    const reversed = reverseString(fileName);\r\n    const start = reversed.indexOf(\".\") + 1;\r\n    const end = reversed.indexOf(\"_\");\r\n    const extension = reversed.substr(start, end - start);\r\n    return reverseString(extension);\r\n}\r\n\r\nconst filterExtensions = (items, extensionName) => {\r\n    return items.filter(item => {\r\n        if(extensionName === \"Tout\"){\r\n            return items;\r\n        }\r\n        if(extensionName === \"JPG/JPEG\"){\r\n            return (getExtensionName(item.fileName).toUpperCase() === \"JPG\" || getExtensionName(item.fileName).toUpperCase() === \"JPEG\");\r\n        }\r\n        return getExtensionName(item.fileName).toUpperCase() === extensionName;\r\n    });\r\n}\r\n\r\nconst filterStatusCode = (items, statusCode) => {\r\n    if(statusCode === \"Tout\")\r\n        return items;\r\n    else{\r\n        const intStatusCode = parseInt(statusCode);\r\n        return items.filter(item => {\r\n            return (item.left.StatusCode === intStatusCode || item.right.StatusCode === intStatusCode);\r\n        })\r\n    }\r\n}\r\n\r\nconst filterSearchBar = (items, searchedString) => {\r\n    return items.filter(item => {\r\n        return (\r\n            item.fileName.includes(searchedString) ||\r\n            item.left.Body.includes(searchedString) ||\r\n            item.right.Body.includes(searchedString) ||\r\n            item.left.Url.includes(searchedString) ||\r\n            item.right.Url.includes(searchedString)\r\n        )\r\n    })\r\n}\r\n\r\nconst dmp = new diff_match_patch();\r\n\r\nconst diff = (text1, text2) => {\r\n    dmp.Diff_Timeout = parseFloat(10);\r\n    const d = dmp.diff_main(text1, text2);\r\n    dmp.diff_cleanupSemantic(d);\r\n    return dmp.diff_prettyHtml(d);\r\n};\r\n\r\nconst filterPaging = (items, numberItems, currentPage) => {\r\n    let pageIndex = 0;\r\n    if (currentPage > 1) {\r\n        pageIndex = currentPage - 1;\r\n    }\r\n\r\n    let controlledNumberItems = 0;\r\n    if (numberItems > 0) {\r\n        controlledNumberItems = numberItems;\r\n    }\r\n\r\n    const { length } = items;\r\n    const beginIndex = pageIndex * controlledNumberItems;\r\n    const lastIndex = length < beginIndex + controlledNumberItems ? length : beginIndex + controlledNumberItems;\r\n\r\n    return items.slice(beginIndex, lastIndex);\r\n};\r\n\r\nconst computeNumberPages = (items, numberItems) => {\r\n    if (!items) {\r\n        return 1;\r\n    }\r\n    const numberItemsControlled = numberItems < 1 ? 1 : numberItems;\r\n    const { length } = items;\r\n    return length > 0 ? Math.ceil(length / numberItemsControlled) : 1;\r\n};\r\n\r\nconst TableResult = ({state, setState}) => {\r\n\r\n    const collapseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, collapse: !item.collapse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n\r\n    const parseItem = (id) => {\r\n        const newItems = []\r\n        state.items.map(item => {\r\n            if (item.id === id) {\r\n                const newItem = {...item, parse: !item.parse}\r\n                newItems.push(newItem);\r\n            } else {\r\n                newItems.push(item)\r\n            }\r\n        })\r\n        setState({...state, items: newItems});\r\n    }\r\n    \r\n    const filteredFiles = filterItems(state.items, state.filters.filterName);\r\n    const filteredStatusCodes = filterStatusCode(filteredFiles, state.filters.currentStatusCode);\r\n    const filteredExtensions = filterExtensions(filteredStatusCodes, state.filters.extensionName);\r\n    const filteredSearchBar = filterSearchBar(filteredExtensions, state.filters.searchedString);\r\n    const pageItems = filterPaging(filteredSearchBar, state.filters.pagingSelect, state.filters.pagingCurrent);\r\n    \r\n    return <>\r\n        \r\n        <StatsTable state={state} setState={setState}/>\r\n        \r\n        {pageItems.length === 0 ? (\r\n            <h2 className=\"error-message\">Il n'y a aucun fichier correspondant à cette configuration de filtres !</h2>\r\n        ) : (\r\n            <>\r\n                {pageItems.map(item => (\r\n                    <div key={item.id} className=\"table-result\">\r\n                        <div className=\"table-result__header\">\r\n                            <div>\r\n                                <p>Résultat fichier : {item.fileName}</p>\r\n                                <h2>{item.left.Body !== item.right.Body ? <span className=\"table-result__row--red\">KO</span> :\r\n                                <span className=\"table-result__row--green\">OK</span>} Ratio temps à gauche - temps à droite\r\n                                : {(item.right.TimeMs - item.left.TimeMs) / 1000} secondes</h2>\r\n                            </div>\r\n                            <div className=\"table-result__buttons-group\">\r\n                                <div className=\"table-result__copy-button\" onClick={() => {\r\n                                    const element = document.createElement('textarea');\r\n                                    element.value = item.fileName.substr(0, item.fileName.lastIndexOf('_'))\r\n                                    document.body.appendChild(element)\r\n                                    element.select()\r\n                                    document.execCommand(\"copy\")\r\n                                    document.body.removeChild(element)\r\n                                }}>Copier</div>\r\n                                <div className=\"table-result__collapse-button\" onClick={() => {collapseItem(item.id)}}>{item.collapse ? \"-\" : \"+\"}</div>\r\n                            </div>\r\n                        </div>\r\n                        {item.collapse && (\r\n                            <>\r\n                                <div className=\"table-result__parse-button-container\">\r\n                                    <button className=\"table-result__parse-button\" type=\"button\" onClick={() => {parseItem(item.id)}}>{item.parse ? \"Déparse\" : \"Parse\"}</button>\r\n                                </div>\r\n                                <div className=\"table-result__column-container\">\r\n                                    <div className=\"table-result__column\">\r\n                                        <div className=\"table-margin\">\r\n                                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {\r\n                                                const element = document.createElement('textarea');\r\n                                                element.value = item.left.FileDirectory\r\n                                                document.body.appendChild(element)\r\n                                                element.select()\r\n                                                document.execCommand(\"copy\")\r\n                                                document.body.removeChild(element)\r\n                                            }}>\r\n                                                Cliquez ici\r\n                                            </button>\r\n                                            <h3>{item.left.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">Time: {item.left.TimeMs / 1000} seconds</div>\r\n                                            <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.left.Body}/>: item.left.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"table-result__column table-result__column--border-left\">\r\n                                        <div className=\"table-margin\">\r\n                                            <div>Copier le lien vers le fichier local dans votre presse-papiers:</div>\r\n                                            <button className=\"table-result__copy-clipboard-button\" onClick={() => {\r\n                                                const element = document.createElement('textarea');\r\n                                                element.value = item.right.FileDirectory\r\n                                                document.body.appendChild(element)\r\n                                                element.select()\r\n                                                document.execCommand(\"copy\")\r\n                                                document.body.removeChild(element)\r\n                                            }}>\r\n                                                Cliquez ici\r\n                                            </button>\r\n                                            <h3>{item.right.Url}</h3>\r\n                                            <div className=\"table-result__column--time-span\">\r\n                                                Time: {item.right.TimeMs / 1000} seconds\r\n                                            </div>\r\n                                        <div>{item.parse ?<JSONPretty id=\"json-pretty\" data={item.right.Body}/>: item.right.Body}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"table-result__row table-result__row--overflow\"\r\n                                dangerouslySetInnerHTML={{__html: diff(item.left.Body, item.right.Body)}}\r\n                                />\r\n                            </>\r\n                        )}\r\n\r\n                    </div>\r\n                ))}\r\n                \r\n                <Paging\r\n                    currentPage={state.filters.pagingCurrent}\r\n                    numberPages={computeNumberPages(filteredExtensions, state.filters.pagingSelect)}\r\n                    numberItems={state.filters.pagingSelect}\r\n                    id=\"paging\"\r\n                    onChange={(e) => {\r\n                        setState({...state,\r\n                            filters: {\r\n                            ...state.filters,\r\n                                pagingSelect: e.numberItems,\r\n                                pagingCurrent: state.filters.pagingCurrent > computeNumberPages(filteredExtensions, e.numberItems) ? 1 : e.page\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            </>\r\n        )}\r\n    </>;\r\n}\r\n\r\nexport default TableResult;\r\n","import React, { useState} from \"react\";\r\nimport {Header, Name, Title} from \"@axa-fr/react-toolkit-layout-header\";\r\nimport TableResult from \"./TableResult\";\r\nimport FileTreatment from \"./FileTreatment\";\r\nimport logo from '@axa-fr/react-toolkit-core/dist/assets/logo-axa.svg';\r\nimport './HandleFile.scss';\r\n\r\nconst HandleFile = () =>{\r\n\r\n    const [state, setState] = useState({\r\n        fileName: \"Comparer un fichier JSON\",\r\n        items:[],\r\n        filters: {\r\n            filterName: \"KO\",\r\n            extensionName: \"Tout\",\r\n            currentStatusCode: \"Tout\",\r\n            searchedString: \"\",\r\n            pagingSelect: 50,\r\n            pagingCurrent: 1\r\n        },\r\n        statusCodes: [{value: \"Tout\", label:\"Tout\"}],\r\n        filterRight: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`,\r\n        filterLeft: `\r\ntry { \r\n    let body = JSON.parse(rawBodyInput);\r\n    rawBodyOutput = JSON.stringify(body);\r\n} catch(ex) {\r\n    console.log(\"Plantage parsing right\");\r\n    console.log(ex.toString());\r\n    rawBodyOutput = rawBodyInput;\r\n}`\r\n    ,\r\n        isStatsTableShowed: true,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Name\r\n                    title=\"ML-CLI\"\r\n                    subtitle=\"Made by AXA\"\r\n                    img={logo}\r\n                    alt=\"Logo AXA\"\r\n                />\r\n            </Header>\r\n            <Title title={state.fileName === \"Comparer un fichier JSON\" ? state.fileName: \"Fichier en cours de visualisation : \" + state.fileName}/>\r\n            <FileTreatment state={state} setState={setState} />\r\n            {state.items.length === 0 ? \"\" : <TableResult state={state} setState={setState} /> }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HandleFile;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/grid.css';\r\nimport './scss/reboot.css';\r\nimport '@axa-fr/react-toolkit-all/dist/style/af-components.css';\r\nimport '@axa-fr/react-toolkit-table/dist/af-table.css';\r\nimport '@axa-fr/react-toolkit-form-input-select/dist/select.scss';\r\nimport HandleFile from \"./handleFiles\";\r\n\r\nexport const App = () => (\r\n    <HandleFile />\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}