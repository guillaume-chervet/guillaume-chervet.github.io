{"version":3,"sources":["handleFiles/TableResult.js","handleFiles/FileTreatment.js","handleFiles/HandleFile.js","index.js"],"names":["stringify","require","tryFormatOutput","data","jsonString","JSON","parse","e","filterItems","items","filterName","map","item","left","Left","Body","right","Right","fileName","FileName","TimeMs","Url","id","cuid","filter","dmp","diff_match_patch","diff","text1","text2","Diff_Timeout","parseFloat","d","diff_main","diff_cleanupSemantic","diff_prettyHtml","TableResult","state","filteredFiles","length","className","key","dangerouslySetInnerHTML","__html","FileTreatment","setState","name","accept","onChange","input","values","file","reader","FileReader","onloadend","result","readAsText","value","options","optionsSelect","HandleFile","useState","label","useEffect","title","subtitle","img","logo","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f3fc10.chunk.js","sourcesContent":["import React from \"react\";\r\nimport diff_match_patch from 'diff-match-patch';\r\nimport cuid from 'cuid';\r\n\r\nconst stringify = require('json-stable-stringify');\r\n\r\nconst tryFormatOutput = (data) => {\r\n    try {\r\n        const jsonString = JSON.parse(data);\r\n        return stringify(jsonString);\r\n    } catch (e){\r\n        return data;\r\n    }\r\n}\r\n\r\nconst mapItems = (data) => (data.map(item => {\r\n    const left = tryFormatOutput(item.Left.Body);\r\n    const right = tryFormatOutput(item.Right.Body);\r\n    return {\r\n        fileName: item.FileName,\r\n        left: { Body: left, TimeMs: item.Left.TimeMs, Url: item.Left.Url },\r\n        right: { Body: right, TimeMs: item.Right.TimeMs, Url: item.Right.Url },\r\n        id : cuid(),\r\n    }\r\n}));\r\n\r\nconst filterItems = (items, filterName) => {\r\n    return mapItems(items).filter(item => {\r\n        if (filterName === \"KO\"){\r\n            return item.left.Body !== item.right.Body;\r\n        }\r\n        if (filterName === \"OK\"){\r\n            return item.left.Body === item.right.Body;\r\n        }\r\n        else {\r\n            return items;\r\n        }\r\n    });\r\n}\r\n\r\nconst dmp = new diff_match_patch();\r\n\r\nconst diff = (text1, text2) => {\r\n    dmp.Diff_Timeout = parseFloat(10);\r\n    const d = dmp.diff_main(text1, text2);\r\n    dmp.diff_cleanupSemantic(d);\r\n    return dmp.diff_prettyHtml(d);\r\n};\r\n\r\nconst TableResult = ({state}) => {\r\n    const filteredFiles = filterItems(state.items, state.filterName);\r\n    return <>\r\n        {filteredFiles.length === 0 ? (\r\n            <h2 className=\"table-title\">Il n'y a aucun fichier de type {state.filterName} !</h2>\r\n        ) : (\r\n            <>\r\n                <div className=\"stats\">\r\n                    <div className=\"stats__title\">\r\n                        Statistiques :\r\n                    </div>\r\n                    <div className=\"stats__results\">\r\n                        <div className=\"stats__results-div stats__results-div--border\">\r\n                            <span>Fichiers OK : {filterItems(state.items, \"OK\").length}</span></div>\r\n                        <div className=\"stats__results-div stats__results-div--border\">\r\n                            <span>Fichiers KO : {filterItems(state.items, \"KO\").length}</span></div>\r\n                        <div className=\"stats__results-div\"><span>Total : {state.items.length}</span></div>\r\n                    </div>\r\n                </div>\r\n            \r\n                {filteredFiles.map(item => (\r\n                    <div key={item.id} className=\"table-result\">\r\n                        <div className=\"table-result__header\">\r\n                            Résultat fichier : {item.fileName}\r\n                        </div>\r\n                        <div className=\"table-result__row\">\r\n                            <h2>{item.left.Body !== item.right.Body ? <span className=\"table-result__row--red\">KO</span> :\r\n                                <span className=\"table-result__row--green\">OK</span>} Ratio temps à gauche - temps à droite\r\n                                : {(item.right.TimeMs - item.left.TimeMs) / 1000} secondes</h2>\r\n                        </div>\r\n                        <div className=\"table-result__column-container\">\r\n                            <div className=\"table-result__column\">\r\n                                <div className=\"table-margin\">\r\n                                    <h3>{item.left.Url}</h3>\r\n                                    <div className=\"table-result__column--time-span\">Time: {item.left.TimeMs / 1000} seconds</div>\r\n                                    <div>{item.left.Body}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"table-result__column table-result__column--border-left\">\r\n                                <div className=\"table-margin\">\r\n                                    <h3>{item.right.Url}</h3>\r\n                                    <div className=\"table-result__column--time-span\">Time: {item.right.TimeMs / 1000} seconds</div>\r\n                                    <div>{item.right.Body}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"table-result__row table-result__row--overflow\"\r\n                             dangerouslySetInnerHTML={{__html: diff(item.left.Body, item.right.Body)}}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </>\r\n        )}\r\n    </>;\r\n}\r\n\r\nexport default TableResult;","import React from \"react\";\r\nimport {File} from \"@axa-fr/react-toolkit-form-input-file\";\r\nimport {SelectBase} from \"@axa-fr/react-toolkit-form-input-select\";\r\n\r\nconst FileTreatment = ({state, setState}) =>{\r\n    \r\n    const loadFile = e => {\r\n        const input = e.values[0].file;\r\n        const reader = new FileReader();\r\n        \r\n        reader.onloadend = () => {\r\n            setState({...state, items: JSON.parse(reader.result)});\r\n        }\r\n        reader.readAsText(input);\r\n    };\r\n    \r\n    return(\r\n        <> \r\n            <div className=\"file-input\">\r\n                <File\r\n                    id=\"file_loader\"\r\n                    name=\"placeJsonFile\"\r\n                    accept=\"application/*, text/plain\"\r\n                    onChange={loadFile}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"select__title\">État de fichier :</p>\r\n                <SelectBase\r\n                    id=\"select_type\"\r\n                    name=\"SelectType\"\r\n                    value={state.filterName}\r\n                    options={state.optionsSelect}\r\n                    onChange={(e) => {\r\n                        setState({...state, filterName: e.value});\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FileTreatment;","import React, {useEffect, useState} from \"react\";\r\nimport {Header, Name, Title} from \"@axa-fr/react-toolkit-layout-header\";\r\nimport TableResult from \"./TableResult\";\r\nimport FileTreatment from \"./FileTreatment\";\r\nimport logo from '@axa-fr/react-toolkit-core/dist/assets/logo-axa.svg';\r\nimport './HandleFile.scss';\r\n\r\nconst HandleFile = () =>{\r\n    \r\n    const [state, setState] = useState({\r\n        filterName: \"KO\", \r\n        items:[], \r\n        optionsSelect: [\r\n            {value: 'KO', label: \"KO\"},\r\n            {value : 'OK', label: \"OK\"},\r\n            {value : 'Tout', label: 'Tout'},\r\n        ],\r\n    });\r\n    \r\n    useEffect(() => {\r\n        \r\n    },[]);\r\n    \r\n    return (\r\n        <>\r\n            <Header>\r\n                <Name\r\n                    title=\"ML-CLI\"\r\n                    subtitle=\"Made by AXA\"\r\n                    img={logo}\r\n                    alt=\"Logo AXA\"\r\n                />\r\n            </Header>\r\n            <Title title=\"Comparer un fichier JSON\"/>\r\n            <FileTreatment state={state} setState={setState} />\r\n            {state.items.length === 0 ? \"\" : <TableResult state={state} /> }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HandleFile;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@axa-fr/react-toolkit-all/dist/style/af-components.css';\r\nimport '@axa-fr/react-toolkit-table/dist/af-table.css';\r\nimport '@axa-fr/react-toolkit-form-input-select/dist/select.scss';\r\nimport HandleFile from \"./handleFiles\";\r\n\r\nexport const App = () => (\r\n    <HandleFile />\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default App;"],"sourceRoot":""}